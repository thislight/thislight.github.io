{
  "version": 3,
  "sources": ["../node_modules/.pnpm/solid-js@1.8.8/node_modules/solid-js/dist/solid.js", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/toDate.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/constructFrom.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/addDays.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/constants.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/_lib/defaultOptions.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/startOfWeek.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/startOfISOWeek.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/getISOWeekYear.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/startOfDay.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/differenceInCalendarDays.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/startOfISOWeekYear.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/isSameDay.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/differenceInCalendarMonths.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/getQuarter.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/differenceInCalendarQuarters.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/differenceInCalendarWeeks.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/differenceInCalendarYears.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/differenceInMilliseconds.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/_lib/roundingMethods.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/differenceInHours.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/differenceInMinutes.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/differenceInSeconds.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/locale/en-US/_lib/formatDistance.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/locale/_lib/buildFormatLongFn.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/locale/en-US/_lib/formatLong.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/locale/en-US/_lib/formatRelative.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/locale/_lib/buildLocalizeFn.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/locale/en-US/_lib/localize.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/locale/_lib/buildMatchFn.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/locale/_lib/buildMatchPatternFn.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/locale/en-US/_lib/match.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/locale/en-US.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/getISOWeek.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/getWeekYear.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/startOfWeekYear.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/getWeek.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/_lib/format/longFormatters.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/_lib/protectedTokens.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/getDefaultOptions.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/getISODay.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/intlFormat.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/intlFormatDistance.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/transpose.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/parse/_lib/Setter.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/parse/_lib/Parser.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/parse/_lib/parsers/EraParser.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/parse/_lib/constants.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/parse/_lib/utils.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/parse/_lib/parsers/YearParser.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/parse/_lib/parsers/LocalWeekYearParser.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/parse/_lib/parsers/ISOWeekYearParser.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/parse/_lib/parsers/ExtendedYearParser.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/parse/_lib/parsers/QuarterParser.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/parse/_lib/parsers/StandAloneQuarterParser.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/parse/_lib/parsers/MonthParser.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/parse/_lib/parsers/StandAloneMonthParser.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/setWeek.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/parse/_lib/parsers/LocalWeekParser.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/setISOWeek.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/parse/_lib/parsers/ISOWeekParser.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/parse/_lib/parsers/DateParser.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/parse/_lib/parsers/DayOfYearParser.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/setDay.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/parse/_lib/parsers/DayParser.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/parse/_lib/parsers/LocalDayParser.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/parse/_lib/parsers/StandAloneLocalDayParser.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/setISODay.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/parse/_lib/parsers/ISODayParser.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/parse/_lib/parsers/AMPMParser.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/parse/_lib/parsers/AMPMMidnightParser.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/parse/_lib/parsers/DayPeriodParser.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/parse/_lib/parsers/Hour1to12Parser.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/parse/_lib/parsers/Hour0to23Parser.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/parse/_lib/parsers/Hour0To11Parser.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/parse/_lib/parsers/Hour1To24Parser.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/parse/_lib/parsers/MinuteParser.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/parse/_lib/parsers/SecondParser.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/parse/_lib/parsers/FractionOfSecondParser.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/parse/_lib/parsers/ISOTimezoneWithZParser.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/parse/_lib/parsers/ISOTimezoneParser.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/parse/_lib/parsers/TimestampSecondsParser.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/parse/_lib/parsers/TimestampMillisecondsParser.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/parse/_lib/parsers.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/parse.mjs", "../node_modules/.pnpm/date-fns@3.1.0/node_modules/date-fns/parseISO.mjs", "../src/uxaddon/time.ts", "../src/uxaddon/dom.ts", "../src/uxaddon/table.ts"],
  "sourcesContent": ["let taskIdCounter = 1,\n  isCallbackScheduled = false,\n  isPerformingWork = false,\n  taskQueue = [],\n  currentTask = null,\n  shouldYieldToHost = null,\n  yieldInterval = 5,\n  deadline = 0,\n  maxYieldInterval = 300,\n  scheduleCallback = null,\n  scheduledCallback = null;\nconst maxSigned31BitInt = 1073741823;\nfunction setupScheduler() {\n  const channel = new MessageChannel(),\n    port = channel.port2;\n  scheduleCallback = () => port.postMessage(null);\n  channel.port1.onmessage = () => {\n    if (scheduledCallback !== null) {\n      const currentTime = performance.now();\n      deadline = currentTime + yieldInterval;\n      const hasTimeRemaining = true;\n      try {\n        const hasMoreWork = scheduledCallback(hasTimeRemaining, currentTime);\n        if (!hasMoreWork) {\n          scheduledCallback = null;\n        } else port.postMessage(null);\n      } catch (error) {\n        port.postMessage(null);\n        throw error;\n      }\n    }\n  };\n  if (navigator && navigator.scheduling && navigator.scheduling.isInputPending) {\n    const scheduling = navigator.scheduling;\n    shouldYieldToHost = () => {\n      const currentTime = performance.now();\n      if (currentTime >= deadline) {\n        if (scheduling.isInputPending()) {\n          return true;\n        }\n        return currentTime >= maxYieldInterval;\n      } else {\n        return false;\n      }\n    };\n  } else {\n    shouldYieldToHost = () => performance.now() >= deadline;\n  }\n}\nfunction enqueue(taskQueue, task) {\n  function findIndex() {\n    let m = 0;\n    let n = taskQueue.length - 1;\n    while (m <= n) {\n      const k = n + m >> 1;\n      const cmp = task.expirationTime - taskQueue[k].expirationTime;\n      if (cmp > 0) m = k + 1;else if (cmp < 0) n = k - 1;else return k;\n    }\n    return m;\n  }\n  taskQueue.splice(findIndex(), 0, task);\n}\nfunction requestCallback(fn, options) {\n  if (!scheduleCallback) setupScheduler();\n  let startTime = performance.now(),\n    timeout = maxSigned31BitInt;\n  if (options && options.timeout) timeout = options.timeout;\n  const newTask = {\n    id: taskIdCounter++,\n    fn,\n    startTime,\n    expirationTime: startTime + timeout\n  };\n  enqueue(taskQueue, newTask);\n  if (!isCallbackScheduled && !isPerformingWork) {\n    isCallbackScheduled = true;\n    scheduledCallback = flushWork;\n    scheduleCallback();\n  }\n  return newTask;\n}\nfunction cancelCallback(task) {\n  task.fn = null;\n}\nfunction flushWork(hasTimeRemaining, initialTime) {\n  isCallbackScheduled = false;\n  isPerformingWork = true;\n  try {\n    return workLoop(hasTimeRemaining, initialTime);\n  } finally {\n    currentTask = null;\n    isPerformingWork = false;\n  }\n}\nfunction workLoop(hasTimeRemaining, initialTime) {\n  let currentTime = initialTime;\n  currentTask = taskQueue[0] || null;\n  while (currentTask !== null) {\n    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {\n      break;\n    }\n    const callback = currentTask.fn;\n    if (callback !== null) {\n      currentTask.fn = null;\n      const didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n      callback(didUserCallbackTimeout);\n      currentTime = performance.now();\n      if (currentTask === taskQueue[0]) {\n        taskQueue.shift();\n      }\n    } else taskQueue.shift();\n    currentTask = taskQueue[0] || null;\n  }\n  return currentTask !== null;\n}\n\nconst sharedConfig = {\n  context: undefined,\n  registry: undefined\n};\nfunction setHydrateContext(context) {\n  sharedConfig.context = context;\n}\nfunction nextHydrateContext() {\n  return {\n    ...sharedConfig.context,\n    id: `${sharedConfig.context.id}${sharedConfig.context.count++}-`,\n    count: 0\n  };\n}\n\nconst equalFn = (a, b) => a === b;\nconst $PROXY = Symbol(\"solid-proxy\");\nconst $TRACK = Symbol(\"solid-track\");\nconst $DEVCOMP = Symbol(\"solid-dev-component\");\nconst signalOptions = {\n  equals: equalFn\n};\nlet ERROR = null;\nlet runEffects = runQueue;\nconst STALE = 1;\nconst PENDING = 2;\nconst UNOWNED = {\n  owned: null,\n  cleanups: null,\n  context: null,\n  owner: null\n};\nconst NO_INIT = {};\nvar Owner = null;\nlet Transition = null;\nlet Scheduler = null;\nlet ExternalSourceConfig = null;\nlet Listener = null;\nlet Updates = null;\nlet Effects = null;\nlet ExecCount = 0;\nfunction createRoot(fn, detachedOwner) {\n  const listener = Listener,\n    owner = Owner,\n    unowned = fn.length === 0,\n    current = detachedOwner === undefined ? owner : detachedOwner,\n    root = unowned ? UNOWNED : {\n      owned: null,\n      cleanups: null,\n      context: current ? current.context : null,\n      owner: current\n    },\n    updateFn = unowned ? fn : () => fn(() => untrack(() => cleanNode(root)));\n  Owner = root;\n  Listener = null;\n  try {\n    return runUpdates(updateFn, true);\n  } finally {\n    Listener = listener;\n    Owner = owner;\n  }\n}\nfunction createSignal(value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const s = {\n    value,\n    observers: null,\n    observerSlots: null,\n    comparator: options.equals || undefined\n  };\n  const setter = value => {\n    if (typeof value === \"function\") {\n      if (Transition && Transition.running && Transition.sources.has(s)) value = value(s.tValue);else value = value(s.value);\n    }\n    return writeSignal(s, value);\n  };\n  return [readSignal.bind(s), setter];\n}\nfunction createComputed(fn, value, options) {\n  const c = createComputation(fn, value, true, STALE);\n  if (Scheduler && Transition && Transition.running) Updates.push(c);else updateComputation(c);\n}\nfunction createRenderEffect(fn, value, options) {\n  const c = createComputation(fn, value, false, STALE);\n  if (Scheduler && Transition && Transition.running) Updates.push(c);else updateComputation(c);\n}\nfunction createEffect(fn, value, options) {\n  runEffects = runUserEffects;\n  const c = createComputation(fn, value, false, STALE),\n    s = SuspenseContext && useContext(SuspenseContext);\n  if (s) c.suspense = s;\n  if (!options || !options.render) c.user = true;\n  Effects ? Effects.push(c) : updateComputation(c);\n}\nfunction createReaction(onInvalidate, options) {\n  let fn;\n  const c = createComputation(() => {\n      fn ? fn() : untrack(onInvalidate);\n      fn = undefined;\n    }, undefined, false, 0),\n    s = SuspenseContext && useContext(SuspenseContext);\n  if (s) c.suspense = s;\n  c.user = true;\n  return tracking => {\n    fn = tracking;\n    updateComputation(c);\n  };\n}\nfunction createMemo(fn, value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const c = createComputation(fn, value, true, 0);\n  c.observers = null;\n  c.observerSlots = null;\n  c.comparator = options.equals || undefined;\n  if (Scheduler && Transition && Transition.running) {\n    c.tState = STALE;\n    Updates.push(c);\n  } else updateComputation(c);\n  return readSignal.bind(c);\n}\nfunction isPromise(v) {\n  return v && typeof v === \"object\" && \"then\" in v;\n}\nfunction createResource(pSource, pFetcher, pOptions) {\n  let source;\n  let fetcher;\n  let options;\n  if (arguments.length === 2 && typeof pFetcher === \"object\" || arguments.length === 1) {\n    source = true;\n    fetcher = pSource;\n    options = pFetcher || {};\n  } else {\n    source = pSource;\n    fetcher = pFetcher;\n    options = pOptions || {};\n  }\n  let pr = null,\n    initP = NO_INIT,\n    id = null,\n    loadedUnderTransition = false,\n    scheduled = false,\n    resolved = (\"initialValue\" in options),\n    dynamic = typeof source === \"function\" && createMemo(source);\n  const contexts = new Set(),\n    [value, setValue] = (options.storage || createSignal)(options.initialValue),\n    [error, setError] = createSignal(undefined),\n    [track, trigger] = createSignal(undefined, {\n      equals: false\n    }),\n    [state, setState] = createSignal(resolved ? \"ready\" : \"unresolved\");\n  if (sharedConfig.context) {\n    id = `${sharedConfig.context.id}${sharedConfig.context.count++}`;\n    let v;\n    if (options.ssrLoadFrom === \"initial\") initP = options.initialValue;else if (sharedConfig.load && (v = sharedConfig.load(id))) initP = v;\n  }\n  function loadEnd(p, v, error, key) {\n    if (pr === p) {\n      pr = null;\n      key !== undefined && (resolved = true);\n      if ((p === initP || v === initP) && options.onHydrated) queueMicrotask(() => options.onHydrated(key, {\n        value: v\n      }));\n      initP = NO_INIT;\n      if (Transition && p && loadedUnderTransition) {\n        Transition.promises.delete(p);\n        loadedUnderTransition = false;\n        runUpdates(() => {\n          Transition.running = true;\n          completeLoad(v, error);\n        }, false);\n      } else completeLoad(v, error);\n    }\n    return v;\n  }\n  function completeLoad(v, err) {\n    runUpdates(() => {\n      if (err === undefined) setValue(() => v);\n      setState(err !== undefined ? \"errored\" : resolved ? \"ready\" : \"unresolved\");\n      setError(err);\n      for (const c of contexts.keys()) c.decrement();\n      contexts.clear();\n    }, false);\n  }\n  function read() {\n    const c = SuspenseContext && useContext(SuspenseContext),\n      v = value(),\n      err = error();\n    if (err !== undefined && !pr) throw err;\n    if (Listener && !Listener.user && c) {\n      createComputed(() => {\n        track();\n        if (pr) {\n          if (c.resolved && Transition && loadedUnderTransition) Transition.promises.add(pr);else if (!contexts.has(c)) {\n            c.increment();\n            contexts.add(c);\n          }\n        }\n      });\n    }\n    return v;\n  }\n  function load(refetching = true) {\n    if (refetching !== false && scheduled) return;\n    scheduled = false;\n    const lookup = dynamic ? dynamic() : source;\n    loadedUnderTransition = Transition && Transition.running;\n    if (lookup == null || lookup === false) {\n      loadEnd(pr, untrack(value));\n      return;\n    }\n    if (Transition && pr) Transition.promises.delete(pr);\n    const p = initP !== NO_INIT ? initP : untrack(() => fetcher(lookup, {\n      value: value(),\n      refetching\n    }));\n    if (!isPromise(p)) {\n      loadEnd(pr, p, undefined, lookup);\n      return p;\n    }\n    pr = p;\n    if (\"value\" in p) {\n      if (p.status === \"success\") loadEnd(pr, p.value, undefined, lookup);else loadEnd(pr, undefined, undefined, lookup);\n      return p;\n    }\n    scheduled = true;\n    queueMicrotask(() => scheduled = false);\n    runUpdates(() => {\n      setState(resolved ? \"refreshing\" : \"pending\");\n      trigger();\n    }, false);\n    return p.then(v => loadEnd(p, v, undefined, lookup), e => loadEnd(p, undefined, castError(e), lookup));\n  }\n  Object.defineProperties(read, {\n    state: {\n      get: () => state()\n    },\n    error: {\n      get: () => error()\n    },\n    loading: {\n      get() {\n        const s = state();\n        return s === \"pending\" || s === \"refreshing\";\n      }\n    },\n    latest: {\n      get() {\n        if (!resolved) return read();\n        const err = error();\n        if (err && !pr) throw err;\n        return value();\n      }\n    }\n  });\n  if (dynamic) createComputed(() => load(false));else load(false);\n  return [read, {\n    refetch: load,\n    mutate: setValue\n  }];\n}\nfunction createDeferred(source, options) {\n  let t,\n    timeout = options ? options.timeoutMs : undefined;\n  const node = createComputation(() => {\n    if (!t || !t.fn) t = requestCallback(() => setDeferred(() => node.value), timeout !== undefined ? {\n      timeout\n    } : undefined);\n    return source();\n  }, undefined, true);\n  const [deferred, setDeferred] = createSignal(Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value, options);\n  updateComputation(node);\n  setDeferred(() => Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value);\n  return deferred;\n}\nfunction createSelector(source, fn = equalFn, options) {\n  const subs = new Map();\n  const node = createComputation(p => {\n    const v = source();\n    for (const [key, val] of subs.entries()) if (fn(key, v) !== fn(key, p)) {\n      for (const c of val.values()) {\n        c.state = STALE;\n        if (c.pure) Updates.push(c);else Effects.push(c);\n      }\n    }\n    return v;\n  }, undefined, true, STALE);\n  updateComputation(node);\n  return key => {\n    const listener = Listener;\n    if (listener) {\n      let l;\n      if (l = subs.get(key)) l.add(listener);else subs.set(key, l = new Set([listener]));\n      onCleanup(() => {\n        l.delete(listener);\n        !l.size && subs.delete(key);\n      });\n    }\n    return fn(key, Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value);\n  };\n}\nfunction batch(fn) {\n  return runUpdates(fn, false);\n}\nfunction untrack(fn) {\n  if (!ExternalSourceConfig && Listener === null) return fn();\n  const listener = Listener;\n  Listener = null;\n  try {\n    if (ExternalSourceConfig) return ExternalSourceConfig.untrack(fn);\n    return fn();\n  } finally {\n    Listener = listener;\n  }\n}\nfunction on(deps, fn, options) {\n  const isArray = Array.isArray(deps);\n  let prevInput;\n  let defer = options && options.defer;\n  return prevValue => {\n    let input;\n    if (isArray) {\n      input = Array(deps.length);\n      for (let i = 0; i < deps.length; i++) input[i] = deps[i]();\n    } else input = deps();\n    if (defer) {\n      defer = false;\n      return undefined;\n    }\n    const result = untrack(() => fn(input, prevInput, prevValue));\n    prevInput = input;\n    return result;\n  };\n}\nfunction onMount(fn) {\n  createEffect(() => untrack(fn));\n}\nfunction onCleanup(fn) {\n  if (Owner === null) ;else if (Owner.cleanups === null) Owner.cleanups = [fn];else Owner.cleanups.push(fn);\n  return fn;\n}\nfunction catchError(fn, handler) {\n  ERROR || (ERROR = Symbol(\"error\"));\n  Owner = createComputation(undefined, undefined, true);\n  Owner.context = {\n    ...Owner.context,\n    [ERROR]: [handler]\n  };\n  if (Transition && Transition.running) Transition.sources.add(Owner);\n  try {\n    return fn();\n  } catch (err) {\n    handleError(err);\n  } finally {\n    Owner = Owner.owner;\n  }\n}\nfunction getListener() {\n  return Listener;\n}\nfunction getOwner() {\n  return Owner;\n}\nfunction runWithOwner(o, fn) {\n  const prev = Owner;\n  const prevListener = Listener;\n  Owner = o;\n  Listener = null;\n  try {\n    return runUpdates(fn, true);\n  } catch (err) {\n    handleError(err);\n  } finally {\n    Owner = prev;\n    Listener = prevListener;\n  }\n}\nfunction enableScheduling(scheduler = requestCallback) {\n  Scheduler = scheduler;\n}\nfunction startTransition(fn) {\n  if (Transition && Transition.running) {\n    fn();\n    return Transition.done;\n  }\n  const l = Listener;\n  const o = Owner;\n  return Promise.resolve().then(() => {\n    Listener = l;\n    Owner = o;\n    let t;\n    if (Scheduler || SuspenseContext) {\n      t = Transition || (Transition = {\n        sources: new Set(),\n        effects: [],\n        promises: new Set(),\n        disposed: new Set(),\n        queue: new Set(),\n        running: true\n      });\n      t.done || (t.done = new Promise(res => t.resolve = res));\n      t.running = true;\n    }\n    runUpdates(fn, false);\n    Listener = Owner = null;\n    return t ? t.done : undefined;\n  });\n}\nconst [transPending, setTransPending] = /*@__PURE__*/createSignal(false);\nfunction useTransition() {\n  return [transPending, startTransition];\n}\nfunction resumeEffects(e) {\n  Effects.push.apply(Effects, e);\n  e.length = 0;\n}\nfunction createContext(defaultValue, options) {\n  const id = Symbol(\"context\");\n  return {\n    id,\n    Provider: createProvider(id),\n    defaultValue\n  };\n}\nfunction useContext(context) {\n  return Owner && Owner.context && Owner.context[context.id] !== undefined ? Owner.context[context.id] : context.defaultValue;\n}\nfunction children(fn) {\n  const children = createMemo(fn);\n  const memo = createMemo(() => resolveChildren(children()));\n  memo.toArray = () => {\n    const c = memo();\n    return Array.isArray(c) ? c : c != null ? [c] : [];\n  };\n  return memo;\n}\nlet SuspenseContext;\nfunction getSuspenseContext() {\n  return SuspenseContext || (SuspenseContext = createContext());\n}\nfunction enableExternalSource(factory, untrack = fn => fn()) {\n  if (ExternalSourceConfig) {\n    const {\n      factory: oldFactory,\n      untrack: oldUntrack\n    } = ExternalSourceConfig;\n    ExternalSourceConfig = {\n      factory: (fn, trigger) => {\n        const oldSource = oldFactory(fn, trigger);\n        const source = factory(x => oldSource.track(x), trigger);\n        return {\n          track: x => source.track(x),\n          dispose() {\n            source.dispose();\n            oldSource.dispose();\n          }\n        };\n      },\n      untrack: fn => oldUntrack(() => untrack(fn))\n    };\n  } else {\n    ExternalSourceConfig = {\n      factory,\n      untrack\n    };\n  }\n}\nfunction readSignal() {\n  const runningTransition = Transition && Transition.running;\n  if (this.sources && (runningTransition ? this.tState : this.state)) {\n    if ((runningTransition ? this.tState : this.state) === STALE) updateComputation(this);else {\n      const updates = Updates;\n      Updates = null;\n      runUpdates(() => lookUpstream(this), false);\n      Updates = updates;\n    }\n  }\n  if (Listener) {\n    const sSlot = this.observers ? this.observers.length : 0;\n    if (!Listener.sources) {\n      Listener.sources = [this];\n      Listener.sourceSlots = [sSlot];\n    } else {\n      Listener.sources.push(this);\n      Listener.sourceSlots.push(sSlot);\n    }\n    if (!this.observers) {\n      this.observers = [Listener];\n      this.observerSlots = [Listener.sources.length - 1];\n    } else {\n      this.observers.push(Listener);\n      this.observerSlots.push(Listener.sources.length - 1);\n    }\n  }\n  if (runningTransition && Transition.sources.has(this)) return this.tValue;\n  return this.value;\n}\nfunction writeSignal(node, value, isComp) {\n  let current = Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value;\n  if (!node.comparator || !node.comparator(current, value)) {\n    if (Transition) {\n      const TransitionRunning = Transition.running;\n      if (TransitionRunning || !isComp && Transition.sources.has(node)) {\n        Transition.sources.add(node);\n        node.tValue = value;\n      }\n      if (!TransitionRunning) node.value = value;\n    } else node.value = value;\n    if (node.observers && node.observers.length) {\n      runUpdates(() => {\n        for (let i = 0; i < node.observers.length; i += 1) {\n          const o = node.observers[i];\n          const TransitionRunning = Transition && Transition.running;\n          if (TransitionRunning && Transition.disposed.has(o)) continue;\n          if (TransitionRunning ? !o.tState : !o.state) {\n            if (o.pure) Updates.push(o);else Effects.push(o);\n            if (o.observers) markDownstream(o);\n          }\n          if (!TransitionRunning) o.state = STALE;else o.tState = STALE;\n        }\n        if (Updates.length > 10e5) {\n          Updates = [];\n          if (false) ;\n          throw new Error();\n        }\n      }, false);\n    }\n  }\n  return value;\n}\nfunction updateComputation(node) {\n  if (!node.fn) return;\n  cleanNode(node);\n  const time = ExecCount;\n  runComputation(node, Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value, time);\n  if (Transition && !Transition.running && Transition.sources.has(node)) {\n    queueMicrotask(() => {\n      runUpdates(() => {\n        Transition && (Transition.running = true);\n        Listener = Owner = node;\n        runComputation(node, node.tValue, time);\n        Listener = Owner = null;\n      }, false);\n    });\n  }\n}\nfunction runComputation(node, value, time) {\n  let nextValue;\n  const owner = Owner,\n    listener = Listener;\n  Listener = Owner = node;\n  try {\n    nextValue = node.fn(value);\n  } catch (err) {\n    if (node.pure) {\n      if (Transition && Transition.running) {\n        node.tState = STALE;\n        node.tOwned && node.tOwned.forEach(cleanNode);\n        node.tOwned = undefined;\n      } else {\n        node.state = STALE;\n        node.owned && node.owned.forEach(cleanNode);\n        node.owned = null;\n      }\n    }\n    node.updatedAt = time + 1;\n    return handleError(err);\n  } finally {\n    Listener = listener;\n    Owner = owner;\n  }\n  if (!node.updatedAt || node.updatedAt <= time) {\n    if (node.updatedAt != null && \"observers\" in node) {\n      writeSignal(node, nextValue, true);\n    } else if (Transition && Transition.running && node.pure) {\n      Transition.sources.add(node);\n      node.tValue = nextValue;\n    } else node.value = nextValue;\n    node.updatedAt = time;\n  }\n}\nfunction createComputation(fn, init, pure, state = STALE, options) {\n  const c = {\n    fn,\n    state: state,\n    updatedAt: null,\n    owned: null,\n    sources: null,\n    sourceSlots: null,\n    cleanups: null,\n    value: init,\n    owner: Owner,\n    context: Owner ? Owner.context : null,\n    pure\n  };\n  if (Transition && Transition.running) {\n    c.state = 0;\n    c.tState = state;\n  }\n  if (Owner === null) ;else if (Owner !== UNOWNED) {\n    if (Transition && Transition.running && Owner.pure) {\n      if (!Owner.tOwned) Owner.tOwned = [c];else Owner.tOwned.push(c);\n    } else {\n      if (!Owner.owned) Owner.owned = [c];else Owner.owned.push(c);\n    }\n  }\n  if (ExternalSourceConfig && c.fn) {\n    const [track, trigger] = createSignal(undefined, {\n      equals: false\n    });\n    const ordinary = ExternalSourceConfig.factory(c.fn, trigger);\n    onCleanup(() => ordinary.dispose());\n    const triggerInTransition = () => startTransition(trigger).then(() => inTransition.dispose());\n    const inTransition = ExternalSourceConfig.factory(c.fn, triggerInTransition);\n    c.fn = x => {\n      track();\n      return Transition && Transition.running ? inTransition.track(x) : ordinary.track(x);\n    };\n  }\n  return c;\n}\nfunction runTop(node) {\n  const runningTransition = Transition && Transition.running;\n  if ((runningTransition ? node.tState : node.state) === 0) return;\n  if ((runningTransition ? node.tState : node.state) === PENDING) return lookUpstream(node);\n  if (node.suspense && untrack(node.suspense.inFallback)) return node.suspense.effects.push(node);\n  const ancestors = [node];\n  while ((node = node.owner) && (!node.updatedAt || node.updatedAt < ExecCount)) {\n    if (runningTransition && Transition.disposed.has(node)) return;\n    if (runningTransition ? node.tState : node.state) ancestors.push(node);\n  }\n  for (let i = ancestors.length - 1; i >= 0; i--) {\n    node = ancestors[i];\n    if (runningTransition) {\n      let top = node,\n        prev = ancestors[i + 1];\n      while ((top = top.owner) && top !== prev) {\n        if (Transition.disposed.has(top)) return;\n      }\n    }\n    if ((runningTransition ? node.tState : node.state) === STALE) {\n      updateComputation(node);\n    } else if ((runningTransition ? node.tState : node.state) === PENDING) {\n      const updates = Updates;\n      Updates = null;\n      runUpdates(() => lookUpstream(node, ancestors[0]), false);\n      Updates = updates;\n    }\n  }\n}\nfunction runUpdates(fn, init) {\n  if (Updates) return fn();\n  let wait = false;\n  if (!init) Updates = [];\n  if (Effects) wait = true;else Effects = [];\n  ExecCount++;\n  try {\n    const res = fn();\n    completeUpdates(wait);\n    return res;\n  } catch (err) {\n    if (!wait) Effects = null;\n    Updates = null;\n    handleError(err);\n  }\n}\nfunction completeUpdates(wait) {\n  if (Updates) {\n    if (Scheduler && Transition && Transition.running) scheduleQueue(Updates);else runQueue(Updates);\n    Updates = null;\n  }\n  if (wait) return;\n  let res;\n  if (Transition) {\n    if (!Transition.promises.size && !Transition.queue.size) {\n      const sources = Transition.sources;\n      const disposed = Transition.disposed;\n      Effects.push.apply(Effects, Transition.effects);\n      res = Transition.resolve;\n      for (const e of Effects) {\n        \"tState\" in e && (e.state = e.tState);\n        delete e.tState;\n      }\n      Transition = null;\n      runUpdates(() => {\n        for (const d of disposed) cleanNode(d);\n        for (const v of sources) {\n          v.value = v.tValue;\n          if (v.owned) {\n            for (let i = 0, len = v.owned.length; i < len; i++) cleanNode(v.owned[i]);\n          }\n          if (v.tOwned) v.owned = v.tOwned;\n          delete v.tValue;\n          delete v.tOwned;\n          v.tState = 0;\n        }\n        setTransPending(false);\n      }, false);\n    } else if (Transition.running) {\n      Transition.running = false;\n      Transition.effects.push.apply(Transition.effects, Effects);\n      Effects = null;\n      setTransPending(true);\n      return;\n    }\n  }\n  const e = Effects;\n  Effects = null;\n  if (e.length) runUpdates(() => runEffects(e), false);\n  if (res) res();\n}\nfunction runQueue(queue) {\n  for (let i = 0; i < queue.length; i++) runTop(queue[i]);\n}\nfunction scheduleQueue(queue) {\n  for (let i = 0; i < queue.length; i++) {\n    const item = queue[i];\n    const tasks = Transition.queue;\n    if (!tasks.has(item)) {\n      tasks.add(item);\n      Scheduler(() => {\n        tasks.delete(item);\n        runUpdates(() => {\n          Transition.running = true;\n          runTop(item);\n        }, false);\n        Transition && (Transition.running = false);\n      });\n    }\n  }\n}\nfunction runUserEffects(queue) {\n  let i,\n    userLength = 0;\n  for (i = 0; i < queue.length; i++) {\n    const e = queue[i];\n    if (!e.user) runTop(e);else queue[userLength++] = e;\n  }\n  if (sharedConfig.context) {\n    if (sharedConfig.count) {\n      sharedConfig.effects || (sharedConfig.effects = []);\n      sharedConfig.effects.push(...queue.slice(0, userLength));\n      return;\n    } else if (sharedConfig.effects) {\n      queue = [...sharedConfig.effects, ...queue];\n      userLength += sharedConfig.effects.length;\n      delete sharedConfig.effects;\n    }\n    setHydrateContext();\n  }\n  for (i = 0; i < userLength; i++) runTop(queue[i]);\n}\nfunction lookUpstream(node, ignore) {\n  const runningTransition = Transition && Transition.running;\n  if (runningTransition) node.tState = 0;else node.state = 0;\n  for (let i = 0; i < node.sources.length; i += 1) {\n    const source = node.sources[i];\n    if (source.sources) {\n      const state = runningTransition ? source.tState : source.state;\n      if (state === STALE) {\n        if (source !== ignore && (!source.updatedAt || source.updatedAt < ExecCount)) runTop(source);\n      } else if (state === PENDING) lookUpstream(source, ignore);\n    }\n  }\n}\nfunction markDownstream(node) {\n  const runningTransition = Transition && Transition.running;\n  for (let i = 0; i < node.observers.length; i += 1) {\n    const o = node.observers[i];\n    if (runningTransition ? !o.tState : !o.state) {\n      if (runningTransition) o.tState = PENDING;else o.state = PENDING;\n      if (o.pure) Updates.push(o);else Effects.push(o);\n      o.observers && markDownstream(o);\n    }\n  }\n}\nfunction cleanNode(node) {\n  let i;\n  if (node.sources) {\n    while (node.sources.length) {\n      const source = node.sources.pop(),\n        index = node.sourceSlots.pop(),\n        obs = source.observers;\n      if (obs && obs.length) {\n        const n = obs.pop(),\n          s = source.observerSlots.pop();\n        if (index < obs.length) {\n          n.sourceSlots[s] = index;\n          obs[index] = n;\n          source.observerSlots[index] = s;\n        }\n      }\n    }\n  }\n  if (Transition && Transition.running && node.pure) {\n    if (node.tOwned) {\n      for (i = node.tOwned.length - 1; i >= 0; i--) cleanNode(node.tOwned[i]);\n      delete node.tOwned;\n    }\n    reset(node, true);\n  } else if (node.owned) {\n    for (i = node.owned.length - 1; i >= 0; i--) cleanNode(node.owned[i]);\n    node.owned = null;\n  }\n  if (node.cleanups) {\n    for (i = node.cleanups.length - 1; i >= 0; i--) node.cleanups[i]();\n    node.cleanups = null;\n  }\n  if (Transition && Transition.running) node.tState = 0;else node.state = 0;\n}\nfunction reset(node, top) {\n  if (!top) {\n    node.tState = 0;\n    Transition.disposed.add(node);\n  }\n  if (node.owned) {\n    for (let i = 0; i < node.owned.length; i++) reset(node.owned[i]);\n  }\n}\nfunction castError(err) {\n  if (err instanceof Error) return err;\n  return new Error(typeof err === \"string\" ? err : \"Unknown error\", {\n    cause: err\n  });\n}\nfunction runErrors(err, fns, owner) {\n  try {\n    for (const f of fns) f(err);\n  } catch (e) {\n    handleError(e, owner && owner.owner || null);\n  }\n}\nfunction handleError(err, owner = Owner) {\n  const fns = ERROR && owner && owner.context && owner.context[ERROR];\n  const error = castError(err);\n  if (!fns) throw error;\n  if (Effects) Effects.push({\n    fn() {\n      runErrors(error, fns, owner);\n    },\n    state: STALE\n  });else runErrors(error, fns, owner);\n}\nfunction resolveChildren(children) {\n  if (typeof children === \"function\" && !children.length) return resolveChildren(children());\n  if (Array.isArray(children)) {\n    const results = [];\n    for (let i = 0; i < children.length; i++) {\n      const result = resolveChildren(children[i]);\n      Array.isArray(result) ? results.push.apply(results, result) : results.push(result);\n    }\n    return results;\n  }\n  return children;\n}\nfunction createProvider(id, options) {\n  return function provider(props) {\n    let res;\n    createRenderEffect(() => res = untrack(() => {\n      Owner.context = {\n        ...Owner.context,\n        [id]: props.value\n      };\n      return children(() => props.children);\n    }), undefined);\n    return res;\n  };\n}\nfunction onError(fn) {\n  ERROR || (ERROR = Symbol(\"error\"));\n  if (Owner === null) ;else if (Owner.context === null || !Owner.context[ERROR]) {\n    Owner.context = {\n      ...Owner.context,\n      [ERROR]: [fn]\n    };\n    mutateContext(Owner, ERROR, [fn]);\n  } else Owner.context[ERROR].push(fn);\n}\nfunction mutateContext(o, key, value) {\n  if (o.owned) {\n    for (let i = 0; i < o.owned.length; i++) {\n      if (o.owned[i].context === o.context) mutateContext(o.owned[i], key, value);\n      if (!o.owned[i].context) {\n        o.owned[i].context = o.context;\n        mutateContext(o.owned[i], key, value);\n      } else if (!o.owned[i].context[key]) {\n        o.owned[i].context[key] = value;\n        mutateContext(o.owned[i], key, value);\n      }\n    }\n  }\n}\n\nfunction observable(input) {\n  return {\n    subscribe(observer) {\n      if (!(observer instanceof Object) || observer == null) {\n        throw new TypeError(\"Expected the observer to be an object.\");\n      }\n      const handler = typeof observer === \"function\" ? observer : observer.next && observer.next.bind(observer);\n      if (!handler) {\n        return {\n          unsubscribe() {}\n        };\n      }\n      const dispose = createRoot(disposer => {\n        createEffect(() => {\n          const v = input();\n          untrack(() => handler(v));\n        });\n        return disposer;\n      });\n      if (getOwner()) onCleanup(dispose);\n      return {\n        unsubscribe() {\n          dispose();\n        }\n      };\n    },\n    [Symbol.observable || \"@@observable\"]() {\n      return this;\n    }\n  };\n}\nfunction from(producer) {\n  const [s, set] = createSignal(undefined, {\n    equals: false\n  });\n  if (\"subscribe\" in producer) {\n    const unsub = producer.subscribe(v => set(() => v));\n    onCleanup(() => \"unsubscribe\" in unsub ? unsub.unsubscribe() : unsub());\n  } else {\n    const clean = producer(set);\n    onCleanup(clean);\n  }\n  return s;\n}\n\nconst FALLBACK = Symbol(\"fallback\");\nfunction dispose(d) {\n  for (let i = 0; i < d.length; i++) d[i]();\n}\nfunction mapArray(list, mapFn, options = {}) {\n  let items = [],\n    mapped = [],\n    disposers = [],\n    len = 0,\n    indexes = mapFn.length > 1 ? [] : null;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    let newItems = list() || [],\n      i,\n      j;\n    newItems[$TRACK];\n    return untrack(() => {\n      let newLen = newItems.length,\n        newIndices,\n        newIndicesNext,\n        temp,\n        tempdisposers,\n        tempIndexes,\n        start,\n        end,\n        newEnd,\n        item;\n      if (newLen === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          indexes && (indexes = []);\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n      }\n      else if (len === 0) {\n        mapped = new Array(newLen);\n        for (j = 0; j < newLen; j++) {\n          items[j] = newItems[j];\n          mapped[j] = createRoot(mapper);\n        }\n        len = newLen;\n      } else {\n        temp = new Array(newLen);\n        tempdisposers = new Array(newLen);\n        indexes && (tempIndexes = new Array(newLen));\n        for (start = 0, end = Math.min(len, newLen); start < end && items[start] === newItems[start]; start++);\n        for (end = len - 1, newEnd = newLen - 1; end >= start && newEnd >= start && items[end] === newItems[newEnd]; end--, newEnd--) {\n          temp[newEnd] = mapped[end];\n          tempdisposers[newEnd] = disposers[end];\n          indexes && (tempIndexes[newEnd] = indexes[end]);\n        }\n        newIndices = new Map();\n        newIndicesNext = new Array(newEnd + 1);\n        for (j = newEnd; j >= start; j--) {\n          item = newItems[j];\n          i = newIndices.get(item);\n          newIndicesNext[j] = i === undefined ? -1 : i;\n          newIndices.set(item, j);\n        }\n        for (i = start; i <= end; i++) {\n          item = items[i];\n          j = newIndices.get(item);\n          if (j !== undefined && j !== -1) {\n            temp[j] = mapped[i];\n            tempdisposers[j] = disposers[i];\n            indexes && (tempIndexes[j] = indexes[i]);\n            j = newIndicesNext[j];\n            newIndices.set(item, j);\n          } else disposers[i]();\n        }\n        for (j = start; j < newLen; j++) {\n          if (j in temp) {\n            mapped[j] = temp[j];\n            disposers[j] = tempdisposers[j];\n            if (indexes) {\n              indexes[j] = tempIndexes[j];\n              indexes[j](j);\n            }\n          } else mapped[j] = createRoot(mapper);\n        }\n        mapped = mapped.slice(0, len = newLen);\n        items = newItems.slice(0);\n      }\n      return mapped;\n    });\n    function mapper(disposer) {\n      disposers[j] = disposer;\n      if (indexes) {\n        const [s, set] = createSignal(j);\n        indexes[j] = set;\n        return mapFn(newItems[j], s);\n      }\n      return mapFn(newItems[j]);\n    }\n  };\n}\nfunction indexArray(list, mapFn, options = {}) {\n  let items = [],\n    mapped = [],\n    disposers = [],\n    signals = [],\n    len = 0,\n    i;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    const newItems = list() || [];\n    newItems[$TRACK];\n    return untrack(() => {\n      if (newItems.length === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          signals = [];\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n        return mapped;\n      }\n      if (items[0] === FALLBACK) {\n        disposers[0]();\n        disposers = [];\n        items = [];\n        mapped = [];\n        len = 0;\n      }\n      for (i = 0; i < newItems.length; i++) {\n        if (i < items.length && items[i] !== newItems[i]) {\n          signals[i](() => newItems[i]);\n        } else if (i >= items.length) {\n          mapped[i] = createRoot(mapper);\n        }\n      }\n      for (; i < items.length; i++) {\n        disposers[i]();\n      }\n      len = signals.length = disposers.length = newItems.length;\n      items = newItems.slice(0);\n      return mapped = mapped.slice(0, len);\n    });\n    function mapper(disposer) {\n      disposers[i] = disposer;\n      const [s, set] = createSignal(newItems[i]);\n      signals[i] = set;\n      return mapFn(s, i);\n    }\n  };\n}\n\nlet hydrationEnabled = false;\nfunction enableHydration() {\n  hydrationEnabled = true;\n}\nfunction createComponent(Comp, props) {\n  if (hydrationEnabled) {\n    if (sharedConfig.context) {\n      const c = sharedConfig.context;\n      setHydrateContext(nextHydrateContext());\n      const r = untrack(() => Comp(props || {}));\n      setHydrateContext(c);\n      return r;\n    }\n  }\n  return untrack(() => Comp(props || {}));\n}\nfunction trueFn() {\n  return true;\n}\nconst propTraps = {\n  get(_, property, receiver) {\n    if (property === $PROXY) return receiver;\n    return _.get(property);\n  },\n  has(_, property) {\n    if (property === $PROXY) return true;\n    return _.has(property);\n  },\n  set: trueFn,\n  deleteProperty: trueFn,\n  getOwnPropertyDescriptor(_, property) {\n    return {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return _.get(property);\n      },\n      set: trueFn,\n      deleteProperty: trueFn\n    };\n  },\n  ownKeys(_) {\n    return _.keys();\n  }\n};\nfunction resolveSource(s) {\n  return !(s = typeof s === \"function\" ? s() : s) ? {} : s;\n}\nfunction resolveSources() {\n  for (let i = 0, length = this.length; i < length; ++i) {\n    const v = this[i]();\n    if (v !== undefined) return v;\n  }\n}\nfunction mergeProps(...sources) {\n  let proxy = false;\n  for (let i = 0; i < sources.length; i++) {\n    const s = sources[i];\n    proxy = proxy || !!s && $PROXY in s;\n    sources[i] = typeof s === \"function\" ? (proxy = true, createMemo(s)) : s;\n  }\n  if (proxy) {\n    return new Proxy({\n      get(property) {\n        for (let i = sources.length - 1; i >= 0; i--) {\n          const v = resolveSource(sources[i])[property];\n          if (v !== undefined) return v;\n        }\n      },\n      has(property) {\n        for (let i = sources.length - 1; i >= 0; i--) {\n          if (property in resolveSource(sources[i])) return true;\n        }\n        return false;\n      },\n      keys() {\n        const keys = [];\n        for (let i = 0; i < sources.length; i++) keys.push(...Object.keys(resolveSource(sources[i])));\n        return [...new Set(keys)];\n      }\n    }, propTraps);\n  }\n  const target = {};\n  const sourcesMap = {};\n  const defined = new Set();\n  for (let i = sources.length - 1; i >= 0; i--) {\n    const source = sources[i];\n    if (!source) continue;\n    const sourceKeys = Object.getOwnPropertyNames(source);\n    for (let i = 0, length = sourceKeys.length; i < length; i++) {\n      const key = sourceKeys[i];\n      if (key === \"__proto__\" || key === \"constructor\") continue;\n      const desc = Object.getOwnPropertyDescriptor(source, key);\n      if (!defined.has(key)) {\n        if (desc.get) {\n          defined.add(key);\n          Object.defineProperty(target, key, {\n            enumerable: true,\n            configurable: true,\n            get: resolveSources.bind(sourcesMap[key] = [desc.get.bind(source)])\n          });\n        } else {\n          if (desc.value !== undefined) defined.add(key);\n          target[key] = desc.value;\n        }\n      } else {\n        const sources = sourcesMap[key];\n        if (sources) {\n          if (desc.get) {\n            sources.push(desc.get.bind(source));\n          } else if (desc.value !== undefined) {\n            sources.push(() => desc.value);\n          }\n        } else if (target[key] === undefined) target[key] = desc.value;\n      }\n    }\n  }\n  return target;\n}\nfunction splitProps(props, ...keys) {\n  if ($PROXY in props) {\n    const blocked = new Set(keys.length > 1 ? keys.flat() : keys[0]);\n    const res = keys.map(k => {\n      return new Proxy({\n        get(property) {\n          return k.includes(property) ? props[property] : undefined;\n        },\n        has(property) {\n          return k.includes(property) && property in props;\n        },\n        keys() {\n          return k.filter(property => property in props);\n        }\n      }, propTraps);\n    });\n    res.push(new Proxy({\n      get(property) {\n        return blocked.has(property) ? undefined : props[property];\n      },\n      has(property) {\n        return blocked.has(property) ? false : property in props;\n      },\n      keys() {\n        return Object.keys(props).filter(k => !blocked.has(k));\n      }\n    }, propTraps));\n    return res;\n  }\n  const otherObject = {};\n  const objects = keys.map(() => ({}));\n  for (const propName of Object.getOwnPropertyNames(props)) {\n    const desc = Object.getOwnPropertyDescriptor(props, propName);\n    const isDefaultDesc = !desc.get && !desc.set && desc.enumerable && desc.writable && desc.configurable;\n    let blocked = false;\n    let objectIndex = 0;\n    for (const k of keys) {\n      if (k.includes(propName)) {\n        blocked = true;\n        isDefaultDesc ? objects[objectIndex][propName] = desc.value : Object.defineProperty(objects[objectIndex], propName, desc);\n      }\n      ++objectIndex;\n    }\n    if (!blocked) {\n      isDefaultDesc ? otherObject[propName] = desc.value : Object.defineProperty(otherObject, propName, desc);\n    }\n  }\n  return [...objects, otherObject];\n}\nfunction lazy(fn) {\n  let comp;\n  let p;\n  const wrap = props => {\n    const ctx = sharedConfig.context;\n    if (ctx) {\n      const [s, set] = createSignal();\n      sharedConfig.count || (sharedConfig.count = 0);\n      sharedConfig.count++;\n      (p || (p = fn())).then(mod => {\n        setHydrateContext(ctx);\n        sharedConfig.count--;\n        set(() => mod.default);\n        setHydrateContext();\n      });\n      comp = s;\n    } else if (!comp) {\n      const [s] = createResource(() => (p || (p = fn())).then(mod => mod.default));\n      comp = s;\n    }\n    let Comp;\n    return createMemo(() => (Comp = comp()) && untrack(() => {\n      if (false) ;\n      if (!ctx) return Comp(props);\n      const c = sharedConfig.context;\n      setHydrateContext(ctx);\n      const r = Comp(props);\n      setHydrateContext(c);\n      return r;\n    }));\n  };\n  wrap.preload = () => p || ((p = fn()).then(mod => comp = () => mod.default), p);\n  return wrap;\n}\nlet counter = 0;\nfunction createUniqueId() {\n  const ctx = sharedConfig.context;\n  return ctx ? `${ctx.id}${ctx.count++}` : `cl-${counter++}`;\n}\n\nconst narrowedError = name => `Stale read from <${name}>.`;\nfunction For(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(mapArray(() => props.each, props.children, fallback || undefined));\n}\nfunction Index(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(indexArray(() => props.each, props.children, fallback || undefined));\n}\nfunction Show(props) {\n  const keyed = props.keyed;\n  const condition = createMemo(() => props.when, undefined, {\n    equals: (a, b) => keyed ? a === b : !a === !b\n  });\n  return createMemo(() => {\n    const c = condition();\n    if (c) {\n      const child = props.children;\n      const fn = typeof child === \"function\" && child.length > 0;\n      return fn ? untrack(() => child(keyed ? c : () => {\n        if (!untrack(condition)) throw narrowedError(\"Show\");\n        return props.when;\n      })) : child;\n    }\n    return props.fallback;\n  }, undefined, undefined);\n}\nfunction Switch(props) {\n  let keyed = false;\n  const equals = (a, b) => (keyed ? a[1] === b[1] : !a[1] === !b[1]) && a[2] === b[2];\n  const conditions = children(() => props.children),\n    evalConditions = createMemo(() => {\n      let conds = conditions();\n      if (!Array.isArray(conds)) conds = [conds];\n      for (let i = 0; i < conds.length; i++) {\n        const c = conds[i].when;\n        if (c) {\n          keyed = !!conds[i].keyed;\n          return [i, c, conds[i]];\n        }\n      }\n      return [-1];\n    }, undefined, {\n      equals\n    });\n  return createMemo(() => {\n    const [index, when, cond] = evalConditions();\n    if (index < 0) return props.fallback;\n    const c = cond.children;\n    const fn = typeof c === \"function\" && c.length > 0;\n    return fn ? untrack(() => c(keyed ? when : () => {\n      if (untrack(evalConditions)[0] !== index) throw narrowedError(\"Match\");\n      return cond.when;\n    })) : c;\n  }, undefined, undefined);\n}\nfunction Match(props) {\n  return props;\n}\nlet Errors;\nfunction resetErrorBoundaries() {\n  Errors && [...Errors].forEach(fn => fn());\n}\nfunction ErrorBoundary(props) {\n  let err;\n  if (sharedConfig.context && sharedConfig.load) err = sharedConfig.load(sharedConfig.context.id + sharedConfig.context.count);\n  const [errored, setErrored] = createSignal(err, undefined);\n  Errors || (Errors = new Set());\n  Errors.add(setErrored);\n  onCleanup(() => Errors.delete(setErrored));\n  return createMemo(() => {\n    let e;\n    if (e = errored()) {\n      const f = props.fallback;\n      return typeof f === \"function\" && f.length ? untrack(() => f(e, () => setErrored())) : f;\n    }\n    return catchError(() => props.children, setErrored);\n  }, undefined, undefined);\n}\n\nconst suspenseListEquals = (a, b) => a.showContent === b.showContent && a.showFallback === b.showFallback;\nconst SuspenseListContext = createContext();\nfunction SuspenseList(props) {\n  let [wrapper, setWrapper] = createSignal(() => ({\n      inFallback: false\n    })),\n    show;\n  const listContext = useContext(SuspenseListContext);\n  const [registry, setRegistry] = createSignal([]);\n  if (listContext) {\n    show = listContext.register(createMemo(() => wrapper()().inFallback));\n  }\n  const resolved = createMemo(prev => {\n    const reveal = props.revealOrder,\n      tail = props.tail,\n      {\n        showContent = true,\n        showFallback = true\n      } = show ? show() : {},\n      reg = registry(),\n      reverse = reveal === \"backwards\";\n    if (reveal === \"together\") {\n      const all = reg.every(inFallback => !inFallback());\n      const res = reg.map(() => ({\n        showContent: all && showContent,\n        showFallback\n      }));\n      res.inFallback = !all;\n      return res;\n    }\n    let stop = false;\n    let inFallback = prev.inFallback;\n    const res = [];\n    for (let i = 0, len = reg.length; i < len; i++) {\n      const n = reverse ? len - i - 1 : i,\n        s = reg[n]();\n      if (!stop && !s) {\n        res[n] = {\n          showContent,\n          showFallback\n        };\n      } else {\n        const next = !stop;\n        if (next) inFallback = true;\n        res[n] = {\n          showContent: next,\n          showFallback: !tail || next && tail === \"collapsed\" ? showFallback : false\n        };\n        stop = true;\n      }\n    }\n    if (!stop) inFallback = false;\n    res.inFallback = inFallback;\n    return res;\n  }, {\n    inFallback: false\n  });\n  setWrapper(() => resolved);\n  return createComponent(SuspenseListContext.Provider, {\n    value: {\n      register: inFallback => {\n        let index;\n        setRegistry(registry => {\n          index = registry.length;\n          return [...registry, inFallback];\n        });\n        return createMemo(() => resolved()[index], undefined, {\n          equals: suspenseListEquals\n        });\n      }\n    },\n    get children() {\n      return props.children;\n    }\n  });\n}\nfunction Suspense(props) {\n  let counter = 0,\n    show,\n    ctx,\n    p,\n    flicker,\n    error;\n  const [inFallback, setFallback] = createSignal(false),\n    SuspenseContext = getSuspenseContext(),\n    store = {\n      increment: () => {\n        if (++counter === 1) setFallback(true);\n      },\n      decrement: () => {\n        if (--counter === 0) setFallback(false);\n      },\n      inFallback,\n      effects: [],\n      resolved: false\n    },\n    owner = getOwner();\n  if (sharedConfig.context && sharedConfig.load) {\n    const key = sharedConfig.context.id + sharedConfig.context.count;\n    let ref = sharedConfig.load(key);\n    if (ref && (typeof ref !== \"object\" || ref.status !== \"success\")) p = ref;\n    if (p && p !== \"$$f\") {\n      const [s, set] = createSignal(undefined, {\n        equals: false\n      });\n      flicker = s;\n      p.then(() => {\n        sharedConfig.gather(key);\n        setHydrateContext(ctx);\n        set();\n        setHydrateContext();\n      }).catch(err => {\n        if (err || sharedConfig.done) {\n          err && (error = err);\n          return set();\n        }\n      });\n    }\n  }\n  const listContext = useContext(SuspenseListContext);\n  if (listContext) show = listContext.register(store.inFallback);\n  let dispose;\n  onCleanup(() => dispose && dispose());\n  return createComponent(SuspenseContext.Provider, {\n    value: store,\n    get children() {\n      return createMemo(() => {\n        if (error) throw error;\n        ctx = sharedConfig.context;\n        if (flicker) {\n          flicker();\n          return flicker = undefined;\n        }\n        if (ctx && p === \"$$f\") setHydrateContext();\n        const rendered = createMemo(() => props.children);\n        return createMemo(prev => {\n          const inFallback = store.inFallback(),\n            {\n              showContent = true,\n              showFallback = true\n            } = show ? show() : {};\n          if ((!inFallback || p && p !== \"$$f\") && showContent) {\n            store.resolved = true;\n            dispose && dispose();\n            dispose = ctx = p = undefined;\n            resumeEffects(store.effects);\n            return rendered();\n          }\n          if (!showFallback) return;\n          if (dispose) return prev;\n          return createRoot(disposer => {\n            dispose = disposer;\n            if (ctx) {\n              setHydrateContext({\n                id: ctx.id + \"f\",\n                count: 0\n              });\n              ctx = undefined;\n            }\n            return props.fallback;\n          }, owner);\n        });\n      });\n    }\n  });\n}\n\nconst DEV = undefined;\n\nexport { $DEVCOMP, $PROXY, $TRACK, DEV, ErrorBoundary, For, Index, Match, Show, Suspense, SuspenseList, Switch, batch, cancelCallback, catchError, children, createComponent, createComputed, createContext, createDeferred, createEffect, createMemo, createReaction, createRenderEffect, createResource, createRoot, createSelector, createSignal, createUniqueId, enableExternalSource, enableHydration, enableScheduling, equalFn, from, getListener, getOwner, indexArray, lazy, mapArray, mergeProps, observable, on, onCleanup, onError, onMount, requestCallback, resetErrorBoundaries, runWithOwner, sharedConfig, splitProps, startTransition, untrack, useContext, useTransition };\n", "/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument) {\n  const argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (\n    argument instanceof Date ||\n    (typeof argument === \"object\" && argStr === \"[object Date]\")\n  ) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new argument.constructor(+argument);\n  } else if (\n    typeof argument === \"number\" ||\n    argStr === \"[object Number]\" ||\n    typeof argument === \"string\" ||\n    argStr === \"[object String]\"\n  ) {\n    // TODO: Can we get rid of as?\n    return new Date(argument);\n  } else {\n    // TODO: Can we get rid of as?\n    return new Date(NaN);\n  }\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n", "/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from 'date-fns'\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use contrustor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   )\n * }\n */\nexport function constructFrom(date, value) {\n  if (date instanceof Date) {\n    return new date.constructor(value);\n  } else {\n    return new Date(value);\n  }\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n", "import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be added.\n *\n * @returns The new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport function addDays(date, amount) {\n  const _date = toDate(date);\n  if (isNaN(amount)) return constructFrom(date, NaN);\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n  _date.setDate(_date.getDate() + amount);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default addDays;\n", "/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n", "let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n", "import { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n", "import { startOfWeek } from \"./startOfWeek.mjs\";\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date) {\n  return startOfWeek(date, { weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n", "import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n", "import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date) {\n  const _date = toDate(date);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n", "/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const utcDate = new Date(\n    Date.UTC(\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate(),\n      date.getHours(),\n      date.getMinutes(),\n      date.getSeconds(),\n      date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(date.getFullYear());\n  return date.getTime() - utcDate.getTime();\n}\n", "import { millisecondsInDay } from \"./constants.mjs\";\nimport { startOfDay } from \"./startOfDay.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.mjs\";\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(dateLeft, dateRight) {\n  const startOfDayLeft = startOfDay(dateLeft);\n  const startOfDayRight = startOfDay(dateRight);\n\n  const timestampLeft =\n    startOfDayLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  const timestampRight =\n    startOfDayRight.getTime() -\n    getTimezoneOffsetInMilliseconds(startOfDayRight);\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n  return Math.round((timestampLeft - timestampRight) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n", "import { getISOWeekYear } from \"./getISOWeekYear.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date) {\n  const year = getISOWeekYear(date);\n  const fourthOfJanuary = constructFrom(date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n", "import { startOfDay } from \"./startOfDay.mjs\";\n\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day (and year and month)?\n *\n * @description\n * Are the given dates in the same day (and year and month)?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The first date to check\n * @param dateRight - The second date to check\n\n * @returns The dates are in the same day (and year and month)\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n *\n * @example\n * // Are 4 September and 4 October in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))\n * //=> false\n *\n * @example\n * // Are 4 September, 2014 and 4 September, 2015 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))\n * //=> false\n */\nexport function isSameDay(dateLeft, dateRight) {\n  const dateLeftStartOfDay = startOfDay(dateLeft);\n  const dateRightStartOfDay = startOfDay(dateRight);\n\n  return +dateLeftStartOfDay === +dateRightStartOfDay;\n}\n\n// Fallback for modularized imports:\nexport default isSameDay;\n", "import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of calendar months\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\nexport function differenceInCalendarMonths(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  const yearDiff = _dateLeft.getFullYear() - _dateRight.getFullYear();\n  const monthDiff = _dateLeft.getMonth() - _dateRight.getMonth();\n\n  return yearDiff * 12 + monthDiff;\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarMonths;\n", "import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getQuarter\n * @category Quarter Helpers\n * @summary Get the year quarter of the given date.\n *\n * @description\n * Get the year quarter of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The quarter\n *\n * @example\n * // Which quarter is 2 July 2014?\n * const result = getQuarter(new Date(2014, 6, 2))\n * //=> 3\n */\nexport function getQuarter(date) {\n  const _date = toDate(date);\n  const quarter = Math.floor(_date.getMonth() / 3) + 1;\n  return quarter;\n}\n\n// Fallback for modularized imports:\nexport default getQuarter;\n", "import { getQuarter } from \"./getQuarter.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInCalendarQuarters\n * @category Quarter Helpers\n * @summary Get the number of calendar quarters between the given dates.\n *\n * @description\n * Get the number of calendar quarters between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n\n * @returns The number of calendar quarters\n *\n * @example\n * // How many calendar quarters are between 31 December 2013 and 2 July 2014?\n * const result = differenceInCalendarQuarters(\n *   new Date(2014, 6, 2),\n *   new Date(2013, 11, 31)\n * )\n * //=> 3\n */\nexport function differenceInCalendarQuarters(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  const yearDiff = _dateLeft.getFullYear() - _dateRight.getFullYear();\n  const quarterDiff = getQuarter(_dateLeft) - getQuarter(_dateRight);\n\n  return yearDiff * 4 + quarterDiff;\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarQuarters;\n", "import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.mjs\";\n\n/**\n * The {@link differenceInCalendarWeeks} function options.\n */\n\n/**\n * @name differenceInCalendarWeeks\n * @category Week Helpers\n * @summary Get the number of calendar weeks between the given dates.\n *\n * @description\n * Get the number of calendar weeks between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n * @param options - An object with options.\n *\n * @returns The number of calendar weeks\n *\n * @example\n * // How many calendar weeks are between 5 July 2014 and 20 July 2014?\n * const result = differenceInCalendarWeeks(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 6, 5)\n * )\n * //=> 3\n *\n * @example\n * // If the week starts on Monday,\n * // how many calendar weeks are between 5 July 2014 and 20 July 2014?\n * const result = differenceInCalendarWeeks(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 6, 5),\n *   { weekStartsOn: 1 }\n * )\n * //=> 2\n */\nexport function differenceInCalendarWeeks(dateLeft, dateRight, options) {\n  const startOfWeekLeft = startOfWeek(dateLeft, options);\n  const startOfWeekRight = startOfWeek(dateRight, options);\n\n  const timestampLeft =\n    startOfWeekLeft.getTime() -\n    getTimezoneOffsetInMilliseconds(startOfWeekLeft);\n  const timestampRight =\n    startOfWeekRight.getTime() -\n    getTimezoneOffsetInMilliseconds(startOfWeekRight);\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round((timestampLeft - timestampRight) / millisecondsInWeek);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarWeeks;\n", "import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInCalendarYears\n * @category Year Helpers\n * @summary Get the number of calendar years between the given dates.\n *\n * @description\n * Get the number of calendar years between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n\n * @returns The number of calendar years\n *\n * @example\n * // How many calendar years are between 31 December 2013 and 11 February 2015?\n * const result = differenceInCalendarYears(\n *   new Date(2015, 1, 11),\n *   new Date(2013, 11, 31)\n * )\n * //=> 2\n */\nexport function differenceInCalendarYears(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  return _dateLeft.getFullYear() - _dateRight.getFullYear();\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarYears;\n", "import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of milliseconds\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\nexport function differenceInMilliseconds(dateLeft, dateRight) {\n  return toDate(dateLeft).getTime() - toDate(dateRight).getTime();\n}\n\n// Fallback for modularized imports:\nexport default differenceInMilliseconds;\n", "export function getRoundingMethod(method) {\n  return method ? Math[method] : Math.trunc;\n}\n", "import { millisecondsInHour } from \"./constants.mjs\";\nimport { differenceInMilliseconds } from \"./differenceInMilliseconds.mjs\";\nimport { getRoundingMethod } from \"./_lib/roundingMethods.mjs\";\n\n/**\n * The {@link differenceInHours} function options.\n */\n\n/**\n * @name differenceInHours\n * @category Hour Helpers\n * @summary Get the number of hours between the given dates.\n *\n * @description\n * Get the number of hours between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n * @param options - An object with options.\n *\n * @returns The number of hours\n *\n * @example\n * // How many hours are between 2 July 2014 06:50:00 and 2 July 2014 19:00:00?\n * const result = differenceInHours(\n *   new Date(2014, 6, 2, 19, 0),\n *   new Date(2014, 6, 2, 6, 50)\n * )\n * //=> 12\n */\nexport function differenceInHours(dateLeft, dateRight, options) {\n  const diff =\n    differenceInMilliseconds(dateLeft, dateRight) / millisecondsInHour;\n  return getRoundingMethod(options?.roundingMethod)(diff);\n}\n\n// Fallback for modularized imports:\nexport default differenceInHours;\n", "import { millisecondsInMinute } from \"./constants.mjs\";\nimport { differenceInMilliseconds } from \"./differenceInMilliseconds.mjs\";\nimport { getRoundingMethod } from \"./_lib/roundingMethods.mjs\";\n\n/**\n * The {@link differenceInMinutes} function options.\n */\n\n/**\n * @name differenceInMinutes\n * @category Minute Helpers\n * @summary Get the number of minutes between the given dates.\n *\n * @description\n * Get the signed number of full (rounded towards 0) minutes between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n * @param options - An object with options.\n *\n * @returns The number of minutes\n *\n * @example\n * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?\n * const result = differenceInMinutes(\n *   new Date(2014, 6, 2, 12, 20, 0),\n *   new Date(2014, 6, 2, 12, 7, 59)\n * )\n * //=> 12\n *\n * @example\n * // How many minutes are between 10:01:59 and 10:00:00\n * const result = differenceInMinutes(\n *   new Date(2000, 0, 1, 10, 0, 0),\n *   new Date(2000, 0, 1, 10, 1, 59)\n * )\n * //=> -1\n */\nexport function differenceInMinutes(dateLeft, dateRight, options) {\n  const diff =\n    differenceInMilliseconds(dateLeft, dateRight) / millisecondsInMinute;\n  return getRoundingMethod(options?.roundingMethod)(diff);\n}\n\n// Fallback for modularized imports:\nexport default differenceInMinutes;\n", "import { differenceInMilliseconds } from \"./differenceInMilliseconds.mjs\";\nimport { getRoundingMethod } from \"./_lib/roundingMethods.mjs\";\n\n/**\n * The {@link differenceInSeconds} function options.\n */\n\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n * @param options - An object with options.\n *\n * @returns The number of seconds\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\nexport function differenceInSeconds(dateLeft, dateRight, options) {\n  const diff = differenceInMilliseconds(dateLeft, dateRight) / 1000;\n  return getRoundingMethod(options?.roundingMethod)(diff);\n}\n\n// Fallback for modularized imports:\nexport default differenceInSeconds;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n", "export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.mjs\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "/* eslint-disable no-unused-vars */\n\n/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.mjs\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n", "export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.mjs\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.mjs\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./en-US/_lib/formatDistance.mjs\";\nimport { formatLong } from \"./en-US/_lib/formatLong.mjs\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.mjs\";\nimport { localize } from \"./en-US/_lib/localize.mjs\";\nimport { match } from \"./en-US/_lib/match.mjs\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n", "import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date) {\n  const _date = toDate(date);\n  const diff =\n    startOfISOWeek(_date).getTime() - startOfISOWeekYear(_date).getTime();\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n", "import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n", "import { constructFrom } from \"./constructFrom.mjs\";\nimport { getWeekYear } from \"./getWeekYear.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n", "import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { startOfWeekYear } from \"./startOfWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\n\nexport function getWeek(date, options) {\n  const _date = toDate(date);\n  const diff =\n    startOfWeek(_date, options).getTime() -\n    startOfWeekYear(_date, options).getTime();\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n", "const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n", "const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n", "import { getDefaultOptions as getInternalDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * @name getDefaultOptions\n * @category Common Helpers\n * @summary Get default options.\n * @pure false\n *\n * @description\n * Returns an object that contains defaults for\n * `options.locale`, `options.weekStartsOn` and `options.firstWeekContainsDate`\n * arguments for all functions.\n *\n * You can change these with [setDefaultOptions](https://date-fns.org/docs/setDefaultOptions).\n *\n * @returns The default options\n *\n * @example\n * const result = getDefaultOptions()\n * //=> {}\n *\n * @example\n * setDefaultOptions({ weekStarsOn: 1, firstWeekContainsDate: 4 })\n * const result = getDefaultOptions()\n * //=> { weekStarsOn: 1, firstWeekContainsDate: 4 }\n */\nexport function getDefaultOptions() {\n  return Object.assign({}, getInternalDefaultOptions());\n}\n\n// Fallback for modularized imports:\nexport default getDefaultOptions;\n", "import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISODay\n * @category Weekday Helpers\n * @summary Get the day of the ISO week of the given date.\n *\n * @description\n * Get the day of the ISO week of the given date,\n * which is 7 for Sunday, 1 for Monday etc.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of ISO week\n *\n * @example\n * // Which day of the ISO week is 26 February 2012?\n * const result = getISODay(new Date(2012, 1, 26))\n * //=> 7\n */\nexport function getISODay(date) {\n  const _date = toDate(date);\n  let day = _date.getDay();\n\n  if (day === 0) {\n    day = 7;\n  }\n\n  return day;\n}\n\n// Fallback for modularized imports:\nexport default getISODay;\n", "import { toDate } from \"./toDate.mjs\";\n\n/**\n * The locale string (see: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl#locales_argument).\n */\n\n/**\n * The format options (see: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat#options)\n */\n\n/**\n * The locale options.\n */\n\n/**\n * @name intlFormat\n * @category Common Helpers\n * @summary Format the date with Intl.DateTimeFormat (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat).\n *\n * @description\n * Return the formatted date string in the given format.\n * The method uses [`Intl.DateTimeFormat`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat) inside.\n * formatOptions are the same as [`Intl.DateTimeFormat` options](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat#using_options)\n *\n * > \u26A0\uFE0F Please note that before Node version 13.0.0, only the locale data for en-US is available by default.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to format\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n *\n * @example\n * // Represent 10 October 2019 in middle-endian format:\n * const result = intlFormat(new Date(2019, 9, 4, 12, 30, 13, 456))\n * //=> 10/4/2019\n */\n\n/**\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to format\n * @param localeOptions - An object with locale\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n *\n * @example\n * // Represent 10 October 2019 in Korean.\n * // Convert the date with locale's options.\n * const result = intlFormat(new Date(2019, 9, 4, 12, 30, 13, 456), {\n *   locale: 'ko-KR',\n * })\n * //=> 2019. 10. 4.\n */\n\n/**\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to format\n * @param formatOptions - The format options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n *\n * @example\n * // Represent 10 October 2019.\n * // Convert the date with format's options.\n * const result = intlFormat.default(new Date(2019, 9, 4, 12, 30, 13, 456), {\n *   year: 'numeric',\n *   month: 'numeric',\n *   day: 'numeric',\n *   hour: 'numeric',\n * })\n * //=> 10/4/2019, 12 PM\n */\n\n/**\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to format\n * @param formatOptions - The format options\n * @param localeOptions - An object with locale\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n *\n * @example\n * // Represent 10 October 2019 in German.\n * // Convert the date with format's options and locale's options.\n * const result = intlFormat(new Date(2019, 9, 4, 12, 30, 13, 456), {\n *   weekday: 'long',\n *   year: 'numeric',\n *   month: 'long',\n *   day: 'numeric',\n * }, {\n *   locale: 'de-DE',\n * })\n * //=> Freitag, 4. Oktober 2019\n */\n\nexport function intlFormat(date, formatOrLocale, localeOptions) {\n  let formatOptions;\n\n  if (isFormatOptions(formatOrLocale)) {\n    formatOptions = formatOrLocale;\n  } else {\n    localeOptions = formatOrLocale;\n  }\n\n  return new Intl.DateTimeFormat(localeOptions?.locale, formatOptions).format(\n    toDate(date),\n  );\n}\n\nfunction isFormatOptions(opts) {\n  return opts !== undefined && !(\"locale\" in opts);\n}\n\n// Fallback for modularized imports:\nexport default intlFormat;\n", "import {\n  secondsInDay,\n  secondsInHour,\n  secondsInMinute,\n  secondsInMonth,\n  secondsInQuarter,\n  secondsInWeek,\n  secondsInYear,\n} from \"./constants.mjs\";\nimport { differenceInCalendarDays } from \"./differenceInCalendarDays.mjs\";\nimport { differenceInCalendarMonths } from \"./differenceInCalendarMonths.mjs\";\nimport { differenceInCalendarQuarters } from \"./differenceInCalendarQuarters.mjs\";\nimport { differenceInCalendarWeeks } from \"./differenceInCalendarWeeks.mjs\";\nimport { differenceInCalendarYears } from \"./differenceInCalendarYears.mjs\";\nimport { differenceInHours } from \"./differenceInHours.mjs\";\nimport { differenceInMinutes } from \"./differenceInMinutes.mjs\";\nimport { differenceInSeconds } from \"./differenceInSeconds.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * The {@link intlFormatDistance} function options.\n */\n\n/**\n * The unit used to format the distance in {@link intlFormatDistance}.\n */\n\n/**\n * @name intlFormatDistance\n * @category Common Helpers\n * @summary Formats distance between two dates in a human-readable format\n * @description\n * The function calculates the difference between two dates and formats it as a human-readable string.\n *\n * The function will pick the most appropriate unit depending on the distance between dates. For example, if the distance is a few hours, it might return `x hours`. If the distance is a few months, it might return `x months`.\n *\n * You can also specify a unit to force using it regardless of the distance to get a result like `123456 hours`.\n *\n * See the table below for the unit picking logic:\n *\n * | Distance between dates | Result (past)  | Result (future) |\n * | ---------------------- | -------------- | --------------- |\n * | 0 seconds              | now            | now             |\n * | 1-59 seconds           | X seconds ago  | in X seconds    |\n * | 1-59 minutes           | X minutes ago  | in X minutes    |\n * | 1-23 hours             | X hours ago    | in X hours      |\n * | 1 day                  | yesterday      | tomorrow        |\n * | 2-6 days               | X days ago     | in X days       |\n * | 7 days                 | last week      | next week       |\n * | 8 days-1 month         | X weeks ago    | in X weeks      |\n * | 1 month                | last month     | next month      |\n * | 2-3 months             | X months ago   | in X months     |\n * | 1 quarter              | last quarter   | next quarter    |\n * | 2-3 quarters           | X quarters ago | in X quarters   |\n * | 1 year                 | last year      | next year       |\n * | 2+ years               | X years ago    | in X years      |\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date\n * @param baseDate - The date to compare with.\n * @param options - An object with options.\n * See MDN for details [Locale identification and negotiation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl#locale_identification_and_negotiation)\n * The narrow one could be similar to the short one for some locales.\n *\n * @returns The distance in words according to language-sensitive relative time formatting.\n *\n * @throws `date` must not be Invalid Date\n * @throws `baseDate` must not be Invalid Date\n * @throws `options.unit` must not be invalid Unit\n * @throws `options.locale` must not be invalid locale\n * @throws `options.localeMatcher` must not be invalid localeMatcher\n * @throws `options.numeric` must not be invalid numeric\n * @throws `options.style` must not be invalid style\n *\n * @example\n * // What is the distance between the dates when the fist date is after the second?\n * intlFormatDistance(\n *   new Date(1986, 3, 4, 11, 30, 0),\n *   new Date(1986, 3, 4, 10, 30, 0)\n * )\n * //=> 'in 1 hour'\n *\n * // What is the distance between the dates when the fist date is before the second?\n * intlFormatDistance(\n *   new Date(1986, 3, 4, 10, 30, 0),\n *   new Date(1986, 3, 4, 11, 30, 0)\n * )\n * //=> '1 hour ago'\n *\n * @example\n * // Use the unit option to force the function to output the result in quarters. Without setting it, the example would return \"next year\"\n * intlFormatDistance(\n *   new Date(1987, 6, 4, 10, 30, 0),\n *   new Date(1986, 3, 4, 10, 30, 0),\n *   { unit: 'quarter' }\n * )\n * //=> 'in 5 quarters'\n *\n * @example\n * // Use the locale option to get the result in Spanish. Without setting it, the example would return \"in 1 hour\".\n * intlFormatDistance(\n *   new Date(1986, 3, 4, 11, 30, 0),\n *   new Date(1986, 3, 4, 10, 30, 0),\n *   { locale: 'es' }\n * )\n * //=> 'dentro de 1 hora'\n *\n * @example\n * // Use the numeric option to force the function to use numeric values. Without setting it, the example would return \"tomorrow\".\n * intlFormatDistance(\n *   new Date(1986, 3, 5, 11, 30, 0),\n *   new Date(1986, 3, 4, 11, 30, 0),\n *   { numeric: 'always' }\n * )\n * //=> 'in 1 day'\n *\n * @example\n * // Use the style option to force the function to use short values. Without setting it, the example would return \"in 2 years\".\n * intlFormatDistance(\n *   new Date(1988, 3, 4, 11, 30, 0),\n *   new Date(1986, 3, 4, 11, 30, 0),\n *   { style: 'short' }\n * )\n * //=> 'in 2 yr'\n */\nexport function intlFormatDistance(date, baseDate, options) {\n  let value = 0;\n  let unit;\n  const dateLeft = toDate(date);\n  const dateRight = toDate(baseDate);\n\n  if (!options?.unit) {\n    // Get the unit based on diffInSeconds calculations if no unit is specified\n    const diffInSeconds = differenceInSeconds(dateLeft, dateRight); // The smallest unit\n\n    if (Math.abs(diffInSeconds) < secondsInMinute) {\n      value = differenceInSeconds(dateLeft, dateRight);\n      unit = \"second\";\n    } else if (Math.abs(diffInSeconds) < secondsInHour) {\n      value = differenceInMinutes(dateLeft, dateRight);\n      unit = \"minute\";\n    } else if (\n      Math.abs(diffInSeconds) < secondsInDay &&\n      Math.abs(differenceInCalendarDays(dateLeft, dateRight)) < 1\n    ) {\n      value = differenceInHours(dateLeft, dateRight);\n      unit = \"hour\";\n    } else if (\n      Math.abs(diffInSeconds) < secondsInWeek &&\n      (value = differenceInCalendarDays(dateLeft, dateRight)) &&\n      Math.abs(value) < 7\n    ) {\n      unit = \"day\";\n    } else if (Math.abs(diffInSeconds) < secondsInMonth) {\n      value = differenceInCalendarWeeks(dateLeft, dateRight);\n      unit = \"week\";\n    } else if (Math.abs(diffInSeconds) < secondsInQuarter) {\n      value = differenceInCalendarMonths(dateLeft, dateRight);\n      unit = \"month\";\n    } else if (Math.abs(diffInSeconds) < secondsInYear) {\n      if (differenceInCalendarQuarters(dateLeft, dateRight) < 4) {\n        // To filter out cases that are less than a year but match 4 quarters\n        value = differenceInCalendarQuarters(dateLeft, dateRight);\n        unit = \"quarter\";\n      } else {\n        value = differenceInCalendarYears(dateLeft, dateRight);\n        unit = \"year\";\n      }\n    } else {\n      value = differenceInCalendarYears(dateLeft, dateRight);\n      unit = \"year\";\n    }\n  } else {\n    // Get the value if unit is specified\n    unit = options?.unit;\n    if (unit === \"second\") {\n      value = differenceInSeconds(dateLeft, dateRight);\n    } else if (unit === \"minute\") {\n      value = differenceInMinutes(dateLeft, dateRight);\n    } else if (unit === \"hour\") {\n      value = differenceInHours(dateLeft, dateRight);\n    } else if (unit === \"day\") {\n      value = differenceInCalendarDays(dateLeft, dateRight);\n    } else if (unit === \"week\") {\n      value = differenceInCalendarWeeks(dateLeft, dateRight);\n    } else if (unit === \"month\") {\n      value = differenceInCalendarMonths(dateLeft, dateRight);\n    } else if (unit === \"quarter\") {\n      value = differenceInCalendarQuarters(dateLeft, dateRight);\n    } else if (unit === \"year\") {\n      value = differenceInCalendarYears(dateLeft, dateRight);\n    }\n  }\n\n  const rtf = new Intl.RelativeTimeFormat(options?.locale, {\n    localeMatcher: options?.localeMatcher,\n    numeric: options?.numeric || \"auto\",\n    style: options?.style,\n  });\n\n  return rtf.format(value, unit);\n}\n\n// Fallback for modularized imports:\nexport default intlFormatDistance;\n", "import { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name transpose\n * @category Generic Helpers\n * @summary Transpose the date to the given constructor.\n *\n * @description\n * The function transposes the date to the given constructor. It helps you\n * to transpose the date in the system time zone to say `UTCDate` or any other\n * date extension.\n *\n * @typeParam DateInputType - The input `Date` type derived from the passed argument.\n * @typeParam DateOutputType - The output `Date` type derived from the passed constructor.\n *\n * @param fromDate - The date to use values from\n * @param constructor - The date constructor to use\n *\n * @returns Date transposed to the given constructor\n *\n * @example\n * // Create July 10, 2022 00:00 in locale time zone\n * const date = new Date(2022, 6, 10)\n * //=> 'Sun Jul 10 2022 00:00:00 GMT+0800 (Singapore Standard Time)'\n *\n * @example\n * // Transpose the date to July 10, 2022 00:00 in UTC\n * transpose(date, UTCDate)\n * //=> 'Sun Jul 10 2022 00:00:00 GMT+0000 (Coordinated Universal Time)'\n */\nexport function transpose(fromDate, constructor) {\n  const date =\n    constructor instanceof Date\n      ? constructFrom(constructor, 0)\n      : new constructor(0);\n  date.setFullYear(\n    fromDate.getFullYear(),\n    fromDate.getMonth(),\n    fromDate.getDate(),\n  );\n  date.setHours(\n    fromDate.getHours(),\n    fromDate.getMinutes(),\n    fromDate.getSeconds(),\n    fromDate.getMilliseconds(),\n  );\n  return date;\n}\n\n// Fallback for modularized imports:\nexport default transpose;\n", "import { transpose } from \"../../transpose.mjs\";\nimport { constructFrom } from \"../../constructFrom.mjs\";\n\nconst TIMEZONE_UNIT_PRIORITY = 10;\n\nexport class Setter {\n  subPriority = 0;\n\n  validate(_utcDate, _options) {\n    return true;\n  }\n}\n\nexport class ValueSetter extends Setter {\n  constructor(\n    value,\n\n    validateValue,\n\n    setValue,\n\n    priority,\n    subPriority,\n  ) {\n    super();\n    this.value = value;\n    this.validateValue = validateValue;\n    this.setValue = setValue;\n    this.priority = priority;\n    if (subPriority) {\n      this.subPriority = subPriority;\n    }\n  }\n\n  validate(date, options) {\n    return this.validateValue(date, this.value, options);\n  }\n\n  set(date, flags, options) {\n    return this.setValue(date, flags, this.value, options);\n  }\n}\n\nexport class DateToSystemTimezoneSetter extends Setter {\n  priority = TIMEZONE_UNIT_PRIORITY;\n  subPriority = -1;\n  set(date, flags) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(date, transpose(date, Date));\n  }\n}\n", "import { ValueSetter } from \"./Setter.mjs\";\n\nexport class Parser {\n  run(dateString, token, match, options) {\n    const result = this.parse(dateString, token, match, options);\n    if (!result) {\n      return null;\n    }\n\n    return {\n      setter: new ValueSetter(\n        result.value,\n        this.validate,\n        this.set,\n        this.priority,\n        this.subPriority,\n      ),\n      rest: result.rest,\n    };\n  }\n\n  validate(_utcDate, _value, _options) {\n    return true;\n  }\n}\n", "import { Parser } from \"../Parser.mjs\";\n\nexport class EraParser extends Parser {\n  priority = 140;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return (\n          match.era(dateString, { width: \"abbreviated\" }) ||\n          match.era(dateString, { width: \"narrow\" })\n        );\n\n      // A, B\n      case \"GGGGG\":\n        return match.era(dateString, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return (\n          match.era(dateString, { width: \"wide\" }) ||\n          match.era(dateString, { width: \"abbreviated\" }) ||\n          match.era(dateString, { width: \"narrow\" })\n        );\n    }\n  }\n\n  set(date, flags, value) {\n    flags.era = value;\n    date.setFullYear(value, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"R\", \"u\", \"t\", \"T\"];\n}\n", "export const numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/, // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/, // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/, // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/, // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/, // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/, // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/, // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/, // 0 to 12\n  minute: /^[0-5]?\\d/, // 0 to 59\n  second: /^[0-5]?\\d/, // 0 to 59\n\n  singleDigit: /^\\d/, // 0 to 9\n  twoDigits: /^\\d{1,2}/, // 0 to 99\n  threeDigits: /^\\d{1,3}/, // 0 to 999\n  fourDigits: /^\\d{1,4}/, // 0 to 9999\n\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/, // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/, // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/, // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/, // 0 to 9999, -0 to -9999\n};\n\nexport const timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/,\n};\n", "import {\n  millisecondsInHour,\n  millisecondsInMinute,\n  millisecondsInSecond,\n} from \"../../constants.mjs\";\nimport { numericPatterns } from \"./constants.mjs\";\n\nexport function mapValue(parseFnResult, mapFn) {\n  if (!parseFnResult) {\n    return parseFnResult;\n  }\n\n  return {\n    value: mapFn(parseFnResult.value),\n    rest: parseFnResult.rest,\n  };\n}\n\nexport function parseNumericPattern(pattern, dateString) {\n  const matchResult = dateString.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  return {\n    value: parseInt(matchResult[0], 10),\n    rest: dateString.slice(matchResult[0].length),\n  };\n}\n\nexport function parseTimezonePattern(pattern, dateString) {\n  const matchResult = dateString.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  // Input is 'Z'\n  if (matchResult[0] === \"Z\") {\n    return {\n      value: 0,\n      rest: dateString.slice(1),\n    };\n  }\n\n  const sign = matchResult[1] === \"+\" ? 1 : -1;\n  const hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  const minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  const seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n\n  return {\n    value:\n      sign *\n      (hours * millisecondsInHour +\n        minutes * millisecondsInMinute +\n        seconds * millisecondsInSecond),\n    rest: dateString.slice(matchResult[0].length),\n  };\n}\n\nexport function parseAnyDigitsSigned(dateString) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, dateString);\n}\n\nexport function parseNDigits(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, dateString);\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, dateString);\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, dateString);\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, dateString);\n    default:\n      return parseNumericPattern(new RegExp(\"^\\\\d{1,\" + n + \"}\"), dateString);\n  }\n}\n\nexport function parseNDigitsSigned(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, dateString);\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, dateString);\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, dateString);\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, dateString);\n    default:\n      return parseNumericPattern(new RegExp(\"^-?\\\\d{1,\" + n + \"}\"), dateString);\n  }\n}\n\nexport function dayPeriodEnumToHours(dayPeriod) {\n  switch (dayPeriod) {\n    case \"morning\":\n      return 4;\n    case \"evening\":\n      return 17;\n    case \"pm\":\n    case \"noon\":\n    case \"afternoon\":\n      return 12;\n    case \"am\":\n    case \"midnight\":\n    case \"night\":\n    default:\n      return 0;\n  }\n}\n\nexport function normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  const isCommonEra = currentYear > 0;\n  // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n  const absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n\n  let result;\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    const rangeEnd = absCurrentYear + 50;\n    const rangeEndCentury = Math.floor(rangeEnd / 100) * 100;\n    const isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nexport function isLeapYearIndex(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\n", "import { Parser } from \"../Parser.mjs\";\nimport { mapValue, normalizeTwoDigitYear, parseNDigits } from \"../utils.mjs\";\n\n// From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n// | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n// |----------|-------|----|-------|-------|-------|\n// | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n// | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n// | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n// | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n// | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\nexport class YearParser extends Parser {\n  priority = 130;\n  incompatibleTokens = [\"Y\", \"R\", \"u\", \"w\", \"I\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n\n  parse(dateString, token, match) {\n    const valueCallback = (year) => ({\n      year,\n      isTwoDigitYear: token === \"yy\",\n    });\n\n    switch (token) {\n      case \"y\":\n        return mapValue(parseNDigits(4, dateString), valueCallback);\n      case \"yo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"year\",\n          }),\n          valueCallback,\n        );\n      default:\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n    }\n  }\n\n  validate(_date, value) {\n    return value.isTwoDigitYear || value.year > 0;\n  }\n\n  set(date, flags, value) {\n    const currentYear = date.getFullYear();\n\n    if (value.isTwoDigitYear) {\n      const normalizedTwoDigitYear = normalizeTwoDigitYear(\n        value.year,\n        currentYear,\n      );\n      date.setFullYear(normalizedTwoDigitYear, 0, 1);\n      date.setHours(0, 0, 0, 0);\n      return date;\n    }\n\n    const year =\n      !(\"era\" in flags) || flags.era === 1 ? value.year : 1 - value.year;\n    date.setFullYear(year, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n}\n", "import { getWeekYear } from \"../../../getWeekYear.mjs\";\nimport { startOfWeek } from \"../../../startOfWeek.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, normalizeTwoDigitYear, parseNDigits } from \"../utils.mjs\";\n\n// Local week-numbering year\nexport class LocalWeekYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token, match) {\n    const valueCallback = (year) => ({\n      year,\n      isTwoDigitYear: token === \"YY\",\n    });\n\n    switch (token) {\n      case \"Y\":\n        return mapValue(parseNDigits(4, dateString), valueCallback);\n      case \"Yo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"year\",\n          }),\n          valueCallback,\n        );\n      default:\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n    }\n  }\n\n  validate(_date, value) {\n    return value.isTwoDigitYear || value.year > 0;\n  }\n\n  set(date, flags, value, options) {\n    const currentYear = getWeekYear(date, options);\n\n    if (value.isTwoDigitYear) {\n      const normalizedTwoDigitYear = normalizeTwoDigitYear(\n        value.year,\n        currentYear,\n      );\n      date.setFullYear(\n        normalizedTwoDigitYear,\n        0,\n        options.firstWeekContainsDate,\n      );\n      date.setHours(0, 0, 0, 0);\n      return startOfWeek(date, options);\n    }\n\n    const year =\n      !(\"era\" in flags) || flags.era === 1 ? value.year : 1 - value.year;\n    date.setFullYear(year, 0, options.firstWeekContainsDate);\n    date.setHours(0, 0, 0, 0);\n    return startOfWeek(date, options);\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"Q\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"t\",\n    \"T\",\n  ];\n}\n", "import { startOfISOWeek } from \"../../../startOfISOWeek.mjs\";\nimport { constructFrom } from \"../../../constructFrom.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigitsSigned } from \"../utils.mjs\";\n\n// ISO week-numbering year\nexport class ISOWeekYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token) {\n    if (token === \"R\") {\n      return parseNDigitsSigned(4, dateString);\n    }\n\n    return parseNDigitsSigned(token.length, dateString);\n  }\n\n  set(date, _flags, value) {\n    const firstWeekOfYear = constructFrom(date, 0);\n    firstWeekOfYear.setFullYear(value, 0, 4);\n    firstWeekOfYear.setHours(0, 0, 0, 0);\n    return startOfISOWeek(firstWeekOfYear);\n  }\n\n  incompatibleTokens = [\n    \"G\",\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"Q\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n", "import { Parser } from \"../Parser.mjs\";\nimport { parseNDigitsSigned } from \"../utils.mjs\";\n\nexport class ExtendedYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token) {\n    if (token === \"u\") {\n      return parseNDigitsSigned(4, dateString);\n    }\n\n    return parseNDigitsSigned(token.length, dateString);\n  }\n\n  set(date, _flags, value) {\n    date.setFullYear(value, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"G\", \"y\", \"Y\", \"R\", \"w\", \"I\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n}\n", "import { Parser } from \"../Parser.mjs\";\nimport { parseNDigits } from \"../utils.mjs\";\n\nexport class QuarterParser extends Parser {\n  priority = 120;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n      case \"QQ\": // 01, 02, 03, 04\n        return parseNDigits(token.length, dateString);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return match.ordinalNumber(dateString, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return (\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return match.quarter(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return (\n          match.quarter(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 4;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth((value - 1) * 3, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n", "import { Parser } from \"../Parser.mjs\";\nimport { parseNDigits } from \"../utils.mjs\";\n\nexport class StandAloneQuarterParser extends Parser {\n  priority = 120;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n      case \"qq\": // 01, 02, 03, 04\n        return parseNDigits(token.length, dateString);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return match.ordinalNumber(dateString, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return (\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"standalone\",\n          })\n        );\n\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return match.quarter(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return (\n          match.quarter(dateString, {\n            width: \"wide\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"standalone\",\n          })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 4;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth((value - 1) * 3, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n", "import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class MonthParser extends Parser {\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n\n  priority = 110;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => value - 1;\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"M\":\n        return mapValue(\n          parseNumericPattern(numericPatterns.month, dateString),\n          valueCallback,\n        );\n      // 01, 02, ..., 12\n      case \"MM\":\n        return mapValue(parseNDigits(2, dateString), valueCallback);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"month\",\n          }),\n          valueCallback,\n        );\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return (\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // J, F, ..., D\n      case \"MMMMM\":\n        return match.month(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return (\n          match.month(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(value, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n}\n", "import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class StandAloneMonthParser extends Parser {\n  priority = 110;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => value - 1;\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return mapValue(\n          parseNumericPattern(numericPatterns.month, dateString),\n          valueCallback,\n        );\n      // 01, 02, ..., 12\n      case \"LL\":\n        return mapValue(parseNDigits(2, dateString), valueCallback);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"month\",\n          }),\n          valueCallback,\n        );\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return (\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // J, F, ..., D\n      case \"LLLLL\":\n        return match.month(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return (\n          match.month(dateString, { width: \"wide\", context: \"standalone\" }) ||\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(value, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n", "import { getWeek } from \"./getWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * The {@link setWeek} function options.\n */\n\n/**\n * @name setWeek\n * @category Week Helpers\n * @summary Set the local week to the given date.\n *\n * @description\n * Set the local week to the given date, saving the weekday number.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param week - The week of the new date\n * @param options - An object with options\n *\n * @returns The new date with the local week set\n *\n * @example\n * // Set the 1st week to 2 January 2005 with default options:\n * const result = setWeek(new Date(2005, 0, 2), 1)\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // Set the 1st week to 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January:\n * const result = setWeek(new Date(2005, 0, 2), 1, {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Sun Jan 4 2004 00:00:00\n */\nexport function setWeek(date, week, options) {\n  const _date = toDate(date);\n  const diff = getWeek(_date, options) - week;\n  _date.setDate(_date.getDate() - diff * 7);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default setWeek;\n", "import { setWeek } from \"../../../setWeek.mjs\";\nimport { startOfWeek } from \"../../../startOfWeek.mjs\";\nimport { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\n// Local week of year\nexport class LocalWeekParser extends Parser {\n  priority = 100;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"w\":\n        return parseNumericPattern(numericPatterns.week, dateString);\n      case \"wo\":\n        return match.ordinalNumber(dateString, { unit: \"week\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 53;\n  }\n\n  set(date, _flags, value, options) {\n    return startOfWeek(setWeek(date, value, options), options);\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"t\",\n    \"T\",\n  ];\n}\n", "import { getISOWeek } from \"./getISOWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name setISOWeek\n * @category ISO Week Helpers\n * @summary Set the ISO week to the given date.\n *\n * @description\n * Set the ISO week to the given date, saving the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param week - The ISO week of the new date\n *\n * @returns The new date with the ISO week set\n *\n * @example\n * // Set the 53rd ISO week to 7 August 2004:\n * const result = setISOWeek(new Date(2004, 7, 7), 53)\n * //=> Sat Jan 01 2005 00:00:00\n */\nexport function setISOWeek(date, week) {\n  const _date = toDate(date);\n  const diff = getISOWeek(_date) - week;\n  _date.setDate(_date.getDate() - diff * 7);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default setISOWeek;\n", "import { setISOWeek } from \"../../../setISOWeek.mjs\";\nimport { startOfISOWeek } from \"../../../startOfISOWeek.mjs\";\nimport { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\n// ISO week of year\nexport class ISOWeekParser extends Parser {\n  priority = 100;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"I\":\n        return parseNumericPattern(numericPatterns.week, dateString);\n      case \"Io\":\n        return match.ordinalNumber(dateString, { unit: \"week\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 53;\n  }\n\n  set(date, _flags, value) {\n    return startOfISOWeek(setISOWeek(date, value));\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n", "import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport {\n  isLeapYearIndex,\n  parseNDigits,\n  parseNumericPattern,\n} from \"../utils.mjs\";\n\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst DAYS_IN_MONTH_LEAP_YEAR = [\n  31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31,\n];\n\n// Day of the month\nexport class DateParser extends Parser {\n  priority = 90;\n  subPriority = 1;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"d\":\n        return parseNumericPattern(numericPatterns.date, dateString);\n      case \"do\":\n        return match.ordinalNumber(dateString, { unit: \"date\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(date, value) {\n    const year = date.getFullYear();\n    const isLeapYear = isLeapYearIndex(year);\n    const month = date.getMonth();\n    if (isLeapYear) {\n      return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n    } else {\n      return value >= 1 && value <= DAYS_IN_MONTH[month];\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setDate(value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n", "import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport {\n  isLeapYearIndex,\n  parseNDigits,\n  parseNumericPattern,\n} from \"../utils.mjs\";\n\nexport class DayOfYearParser extends Parser {\n  priority = 90;\n\n  subpriority = 1;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"D\":\n      case \"DD\":\n        return parseNumericPattern(numericPatterns.dayOfYear, dateString);\n      case \"Do\":\n        return match.ordinalNumber(dateString, { unit: \"date\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(date, value) {\n    const year = date.getFullYear();\n    const isLeapYear = isLeapYearIndex(year);\n    if (isLeapYear) {\n      return value >= 1 && value <= 366;\n    } else {\n      return value >= 1 && value <= 365;\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(0, value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"E\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n", "import { addDays } from \"./addDays.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link setDay} function options.\n */\n\n/**\n * @name setDay\n * @category Weekday Helpers\n * @summary Set the day of the week to the given date.\n *\n * @description\n * Set the day of the week to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param day - The day of the week of the new date\n * @param options - An object with options.\n *\n * @returns The new date with the day of the week set\n *\n * @example\n * // Set week day to Sunday, with the default weekStartsOn of Sunday:\n * const result = setDay(new Date(2014, 8, 1), 0)\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // Set week day to Sunday, with a weekStartsOn of Monday:\n * const result = setDay(new Date(2014, 8, 1), 0, { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 00:00:00\n */\nexport function setDay(date, day, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date);\n  const currentDay = _date.getDay();\n\n  const remainder = day % 7;\n  const dayIndex = (remainder + 7) % 7;\n\n  const delta = 7 - weekStartsOn;\n  const diff =\n    day < 0 || day > 6\n      ? day - ((currentDay + delta) % 7)\n      : ((dayIndex + delta) % 7) - ((currentDay + delta) % 7);\n  return addDays(_date, diff);\n}\n\n// Fallback for modularized imports:\nexport default setDay;\n", "import { setDay } from \"../../../setDay.mjs\";\nimport { Parser } from \"../Parser.mjs\";\n\n// Day of week\nexport class DayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // T\n      case \"EEEEE\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"D\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n}\n", "import { setDay } from \"../../../setDay.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits } from \"../utils.mjs\";\n\n// Local day of week\nexport class LocalDayParser extends Parser {\n  priority = 90;\n  parse(dateString, token, match, options) {\n    const valueCallback = (value) => {\n      const wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n      return ((value + options.weekStartsOn + 6) % 7) + wholeWeekDays;\n    };\n\n    switch (token) {\n      // 3\n      case \"e\":\n      case \"ee\": // 03\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n      // 3rd\n      case \"eo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"day\",\n          }),\n          valueCallback,\n        );\n      // Tue\n      case \"eee\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // T\n      case \"eeeee\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // Tuesday\n      case \"eeee\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"i\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n", "import { setDay } from \"../../../setDay.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits } from \"../utils.mjs\";\n\n// Stand-alone local day of week\nexport class StandAloneLocalDayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match, options) {\n    const valueCallback = (value) => {\n      const wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n      return ((value + options.weekStartsOn + 6) % 7) + wholeWeekDays;\n    };\n\n    switch (token) {\n      // 3\n      case \"c\":\n      case \"cc\": // 03\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n      // 3rd\n      case \"co\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"day\",\n          }),\n          valueCallback,\n        );\n      // Tue\n      case \"ccc\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // T\n      case \"ccccc\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // Tuesday\n      case \"cccc\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"standalone\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"i\",\n    \"e\",\n    \"t\",\n    \"T\",\n  ];\n}\n", "import { addDays } from \"./addDays.mjs\";\nimport { getISODay } from \"./getISODay.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name setISODay\n * @category Weekday Helpers\n * @summary Set the day of the ISO week to the given date.\n *\n * @description\n * Set the day of the ISO week to the given date.\n * ISO week starts with Monday.\n * 7 is the index of Sunday, 1 is the index of Monday etc.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param day - The day of the ISO week of the new date\n *\n * @returns The new date with the day of the ISO week set\n *\n * @example\n * // Set Sunday to 1 September 2014:\n * const result = setISODay(new Date(2014, 8, 1), 7)\n * //=> Sun Sep 07 2014 00:00:00\n */\nexport function setISODay(date, day) {\n  const _date = toDate(date);\n  const currentDay = getISODay(_date);\n  const diff = day - currentDay;\n  return addDays(_date, diff);\n}\n\n// Fallback for modularized imports:\nexport default setISODay;\n", "import { setISODay } from \"../../../setISODay.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits } from \"../utils.mjs\";\n\n// ISO day of week\nexport class ISODayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => {\n      if (value === 0) {\n        return 7;\n      }\n      return value;\n    };\n\n    switch (token) {\n      // 2\n      case \"i\":\n      case \"ii\": // 02\n        return parseNDigits(token.length, dateString);\n      // 2nd\n      case \"io\":\n        return match.ordinalNumber(dateString, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"short\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n      // T\n      case \"iiiii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          }),\n          valueCallback,\n        );\n      // Tu\n      case \"iiiiii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"short\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n      // Tuesday\n      case \"iiii\":\n      default:\n        return mapValue(\n          match.day(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"abbreviated\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"short\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 7;\n  }\n\n  set(date, _flags, value) {\n    date = setISODay(date, value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n", "import { Parser } from \"../Parser.mjs\";\nimport { dayPeriodEnumToHours } from \"../utils.mjs\";\n\nexport class AMPMParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n      case \"aaa\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"aaaaa\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"b\", \"B\", \"H\", \"k\", \"t\", \"T\"];\n}\n", "import { Parser } from \"../Parser.mjs\";\nimport { dayPeriodEnumToHours } from \"../utils.mjs\";\n\nexport class AMPMMidnightParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n      case \"bbb\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"bbbbb\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"B\", \"H\", \"k\", \"t\", \"T\"];\n}\n", "import { Parser } from \"../Parser.mjs\";\nimport { dayPeriodEnumToHours } from \"../utils.mjs\";\n\n// in the morning, in the afternoon, in the evening, at night\nexport class DayPeriodParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"BBBBB\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"t\", \"T\"];\n}\n", "import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class Hour1to12Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"h\":\n        return parseNumericPattern(numericPatterns.hour12h, dateString);\n      case \"ho\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 12;\n  }\n\n  set(date, _flags, value) {\n    const isPM = date.getHours() >= 12;\n    if (isPM && value < 12) {\n      date.setHours(value + 12, 0, 0, 0);\n    } else if (!isPM && value === 12) {\n      date.setHours(0, 0, 0, 0);\n    } else {\n      date.setHours(value, 0, 0, 0);\n    }\n    return date;\n  }\n\n  incompatibleTokens = [\"H\", \"K\", \"k\", \"t\", \"T\"];\n}\n", "import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class Hour0to23Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"H\":\n        return parseNumericPattern(numericPatterns.hour23h, dateString);\n      case \"Ho\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 23;\n  }\n\n  set(date, _flags, value) {\n    date.setHours(value, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"h\", \"K\", \"k\", \"t\", \"T\"];\n}\n", "import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class Hour0To11Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"K\":\n        return parseNumericPattern(numericPatterns.hour11h, dateString);\n      case \"Ko\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    const isPM = date.getHours() >= 12;\n    if (isPM && value < 12) {\n      date.setHours(value + 12, 0, 0, 0);\n    } else {\n      date.setHours(value, 0, 0, 0);\n    }\n    return date;\n  }\n\n  incompatibleTokens = [\"h\", \"H\", \"k\", \"t\", \"T\"];\n}\n", "import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class Hour1To24Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"k\":\n        return parseNumericPattern(numericPatterns.hour24h, dateString);\n      case \"ko\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 24;\n  }\n\n  set(date, _flags, value) {\n    const hours = value <= 24 ? value % 24 : value;\n    date.setHours(hours, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"h\", \"H\", \"K\", \"t\", \"T\"];\n}\n", "import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class MinuteParser extends Parser {\n  priority = 60;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"m\":\n        return parseNumericPattern(numericPatterns.minute, dateString);\n      case \"mo\":\n        return match.ordinalNumber(dateString, { unit: \"minute\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 59;\n  }\n\n  set(date, _flags, value) {\n    date.setMinutes(value, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n", "import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class SecondParser extends Parser {\n  priority = 50;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"s\":\n        return parseNumericPattern(numericPatterns.second, dateString);\n      case \"so\":\n        return match.ordinalNumber(dateString, { unit: \"second\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 59;\n  }\n\n  set(date, _flags, value) {\n    date.setSeconds(value, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n", "import { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits } from \"../utils.mjs\";\n\nexport class FractionOfSecondParser extends Parser {\n  priority = 30;\n\n  parse(dateString, token) {\n    const valueCallback = (value) =>\n      Math.floor(value * Math.pow(10, -token.length + 3));\n    return mapValue(parseNDigits(token.length, dateString), valueCallback);\n  }\n\n  set(date, _flags, value) {\n    date.setMilliseconds(value);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n", "import { constructFrom } from \"../../../constructFrom.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"../../../_lib/getTimezoneOffsetInMilliseconds.mjs\";\nimport { timezonePatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseTimezonePattern } from \"../utils.mjs\";\n\n// Timezone (ISO-8601. +00:00 is `'Z'`)\nexport class ISOTimezoneWithZParser extends Parser {\n  priority = 10;\n\n  parse(dateString, token) {\n    switch (token) {\n      case \"X\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalMinutes,\n          dateString,\n        );\n      case \"XX\":\n        return parseTimezonePattern(timezonePatterns.basic, dateString);\n      case \"XXXX\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalSeconds,\n          dateString,\n        );\n      case \"XXXXX\":\n        return parseTimezonePattern(\n          timezonePatterns.extendedOptionalSeconds,\n          dateString,\n        );\n      case \"XXX\":\n      default:\n        return parseTimezonePattern(timezonePatterns.extended, dateString);\n    }\n  }\n\n  set(date, flags, value) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(\n      date,\n      date.getTime() - getTimezoneOffsetInMilliseconds(date) - value,\n    );\n  }\n\n  incompatibleTokens = [\"t\", \"T\", \"x\"];\n}\n", "import { constructFrom } from \"../../../constructFrom.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"../../../_lib/getTimezoneOffsetInMilliseconds.mjs\";\nimport { timezonePatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseTimezonePattern } from \"../utils.mjs\";\n\n// Timezone (ISO-8601)\nexport class ISOTimezoneParser extends Parser {\n  priority = 10;\n\n  parse(dateString, token) {\n    switch (token) {\n      case \"x\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalMinutes,\n          dateString,\n        );\n      case \"xx\":\n        return parseTimezonePattern(timezonePatterns.basic, dateString);\n      case \"xxxx\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalSeconds,\n          dateString,\n        );\n      case \"xxxxx\":\n        return parseTimezonePattern(\n          timezonePatterns.extendedOptionalSeconds,\n          dateString,\n        );\n      case \"xxx\":\n      default:\n        return parseTimezonePattern(timezonePatterns.extended, dateString);\n    }\n  }\n\n  set(date, flags, value) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(\n      date,\n      date.getTime() - getTimezoneOffsetInMilliseconds(date) - value,\n    );\n  }\n\n  incompatibleTokens = [\"t\", \"T\", \"X\"];\n}\n", "import { constructFrom } from \"../../../constructFrom.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseAnyDigitsSigned } from \"../utils.mjs\";\n\nexport class TimestampSecondsParser extends Parser {\n  priority = 40;\n\n  parse(dateString) {\n    return parseAnyDigitsSigned(dateString);\n  }\n\n  set(date, _flags, value) {\n    return [constructFrom(date, value * 1000), { timestampIsSet: true }];\n  }\n\n  incompatibleTokens = \"*\";\n}\n", "import { constructFrom } from \"../../../constructFrom.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseAnyDigitsSigned } from \"../utils.mjs\";\n\nexport class TimestampMillisecondsParser extends Parser {\n  priority = 20;\n\n  parse(dateString) {\n    return parseAnyDigitsSigned(dateString);\n  }\n\n  set(date, _flags, value) {\n    return [constructFrom(date, value), { timestampIsSet: true }];\n  }\n\n  incompatibleTokens = \"*\";\n}\n", "import { EraParser } from \"./parsers/EraParser.mjs\";\nimport { YearParser } from \"./parsers/YearParser.mjs\";\nimport { LocalWeekYearParser } from \"./parsers/LocalWeekYearParser.mjs\";\nimport { ISOWeekYearParser } from \"./parsers/ISOWeekYearParser.mjs\";\nimport { ExtendedYearParser } from \"./parsers/ExtendedYearParser.mjs\";\nimport { QuarterParser } from \"./parsers/QuarterParser.mjs\";\nimport { StandAloneQuarterParser } from \"./parsers/StandAloneQuarterParser.mjs\";\nimport { MonthParser } from \"./parsers/MonthParser.mjs\";\nimport { StandAloneMonthParser } from \"./parsers/StandAloneMonthParser.mjs\";\nimport { LocalWeekParser } from \"./parsers/LocalWeekParser.mjs\";\nimport { ISOWeekParser } from \"./parsers/ISOWeekParser.mjs\";\nimport { DateParser } from \"./parsers/DateParser.mjs\";\nimport { DayOfYearParser } from \"./parsers/DayOfYearParser.mjs\";\nimport { DayParser } from \"./parsers/DayParser.mjs\";\nimport { LocalDayParser } from \"./parsers/LocalDayParser.mjs\";\nimport { StandAloneLocalDayParser } from \"./parsers/StandAloneLocalDayParser.mjs\";\nimport { ISODayParser } from \"./parsers/ISODayParser.mjs\";\nimport { AMPMParser } from \"./parsers/AMPMParser.mjs\";\nimport { AMPMMidnightParser } from \"./parsers/AMPMMidnightParser.mjs\";\nimport { DayPeriodParser } from \"./parsers/DayPeriodParser.mjs\";\nimport { Hour1to12Parser } from \"./parsers/Hour1to12Parser.mjs\";\nimport { Hour0to23Parser } from \"./parsers/Hour0to23Parser.mjs\";\nimport { Hour0To11Parser } from \"./parsers/Hour0To11Parser.mjs\";\nimport { Hour1To24Parser } from \"./parsers/Hour1To24Parser.mjs\";\nimport { MinuteParser } from \"./parsers/MinuteParser.mjs\";\nimport { SecondParser } from \"./parsers/SecondParser.mjs\";\nimport { FractionOfSecondParser } from \"./parsers/FractionOfSecondParser.mjs\";\nimport { ISOTimezoneWithZParser } from \"./parsers/ISOTimezoneWithZParser.mjs\";\nimport { ISOTimezoneParser } from \"./parsers/ISOTimezoneParser.mjs\";\nimport { TimestampSecondsParser } from \"./parsers/TimestampSecondsParser.mjs\";\nimport { TimestampMillisecondsParser } from \"./parsers/TimestampMillisecondsParser.mjs\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any -- It's ok, we want any here\nexport const parsers = {\n  G: new EraParser(),\n  y: new YearParser(),\n  Y: new LocalWeekYearParser(),\n  R: new ISOWeekYearParser(),\n  u: new ExtendedYearParser(),\n  Q: new QuarterParser(),\n  q: new StandAloneQuarterParser(),\n  M: new MonthParser(),\n  L: new StandAloneMonthParser(),\n  w: new LocalWeekParser(),\n  I: new ISOWeekParser(),\n  d: new DateParser(),\n  D: new DayOfYearParser(),\n  E: new DayParser(),\n  e: new LocalDayParser(),\n  c: new StandAloneLocalDayParser(),\n  i: new ISODayParser(),\n  a: new AMPMParser(),\n  b: new AMPMMidnightParser(),\n  B: new DayPeriodParser(),\n  h: new Hour1to12Parser(),\n  H: new Hour0to23Parser(),\n  K: new Hour0To11Parser(),\n  k: new Hour1To24Parser(),\n  m: new MinuteParser(),\n  s: new SecondParser(),\n  S: new FractionOfSecondParser(),\n  X: new ISOTimezoneWithZParser(),\n  x: new ISOTimezoneParser(),\n  t: new TimestampSecondsParser(),\n  T: new TimestampMillisecondsParser(),\n};\n", "import { constructFrom } from \"./constructFrom.mjs\";\nimport { getDefaultOptions } from \"./getDefaultOptions.mjs\";\nimport { enUS as defaultLocale } from \"./locale/en-US.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { longFormatters } from \"./_lib/format/longFormatters.mjs\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.mjs\";\nimport { parsers } from \"./parse/_lib/parsers.mjs\";\nimport { DateToSystemTimezoneSetter } from \"./parse/_lib/Setter.mjs\";\n\n/**\n * The {@link parse} function options.\n */\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\n\nconst notWhitespaceRegExp = /\\S/;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > \u26A0\uFE0F Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 001, ..., 999                |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear](https://date-fns.org/docs/setISOWeekYear)\n *    and [setWeekYear](https://date-fns.org/docs/setWeekYear)).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n *\n * `referenceDate` must be passed for correct work of the function.\n * If you're not sure which `referenceDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateStr - The string to parse\n * @param formatStr - The string of tokens\n * @param referenceDate - defines values missing from the parsed dateString\n * @param options - An object with options.\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @returns The parsed date\n *\n * @throws `options.locale` must contain `match` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\nexport function parse(dateStr, formatStr, referenceDate, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  if (formatStr === \"\") {\n    if (dateStr === \"\") {\n      return toDate(referenceDate);\n    } else {\n      return constructFrom(referenceDate, NaN);\n    }\n  }\n\n  const subFnOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  // If timezone isn't specified, it will be set to the system timezone\n  const setters = [new DateToSystemTimezoneSetter()];\n\n  const tokens = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter in longFormatters) {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp);\n\n  const usedTokens = [];\n\n  for (let token of tokens) {\n    if (\n      !options?.useAdditionalWeekYearTokens &&\n      isProtectedWeekYearToken(token)\n    ) {\n      warnOrThrowProtectedError(token, formatStr, dateStr);\n    }\n    if (\n      !options?.useAdditionalDayOfYearTokens &&\n      isProtectedDayOfYearToken(token)\n    ) {\n      warnOrThrowProtectedError(token, formatStr, dateStr);\n    }\n\n    const firstCharacter = token[0];\n    const parser = parsers[firstCharacter];\n    if (parser) {\n      const { incompatibleTokens } = parser;\n      if (Array.isArray(incompatibleTokens)) {\n        const incompatibleToken = usedTokens.find(\n          (usedToken) =>\n            incompatibleTokens.includes(usedToken.token) ||\n            usedToken.token === firstCharacter,\n        );\n        if (incompatibleToken) {\n          throw new RangeError(\n            `The format string mustn't contain \\`${incompatibleToken.fullToken}\\` and \\`${token}\\` at the same time`,\n          );\n        }\n      } else if (parser.incompatibleTokens === \"*\" && usedTokens.length > 0) {\n        throw new RangeError(\n          `The format string mustn't contain \\`${token}\\` and any other token at the same time`,\n        );\n      }\n\n      usedTokens.push({ token: firstCharacter, fullToken: token });\n\n      const parseResult = parser.run(\n        dateStr,\n        token,\n        locale.match,\n        subFnOptions,\n      );\n\n      if (!parseResult) {\n        return constructFrom(referenceDate, NaN);\n      }\n\n      setters.push(parseResult.setter);\n\n      dateStr = parseResult.rest;\n    } else {\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      // Replace two single quote characters with one single quote character\n      if (token === \"''\") {\n        token = \"'\";\n      } else if (firstCharacter === \"'\") {\n        token = cleanEscapedString(token);\n      }\n\n      // Cut token from string, or, if string doesn't match the token, return Invalid Date\n      if (dateStr.indexOf(token) === 0) {\n        dateStr = dateStr.slice(token.length);\n      } else {\n        return constructFrom(referenceDate, NaN);\n      }\n    }\n  }\n\n  // Check if the remaining input contains something other than whitespace\n  if (dateStr.length > 0 && notWhitespaceRegExp.test(dateStr)) {\n    return constructFrom(referenceDate, NaN);\n  }\n\n  const uniquePrioritySetters = setters\n    .map((setter) => setter.priority)\n    .sort((a, b) => b - a)\n    .filter((priority, index, array) => array.indexOf(priority) === index)\n    .map((priority) =>\n      setters\n        .filter((setter) => setter.priority === priority)\n        .sort((a, b) => b.subPriority - a.subPriority),\n    )\n    .map((setterArray) => setterArray[0]);\n\n  let date = toDate(referenceDate);\n\n  if (isNaN(date.getTime())) {\n    return constructFrom(referenceDate, NaN);\n  }\n\n  const flags = {};\n  for (const setter of uniquePrioritySetters) {\n    if (!setter.validate(date, subFnOptions)) {\n      return constructFrom(referenceDate, NaN);\n    }\n\n    const result = setter.set(date, flags, subFnOptions);\n    // Result is tuple (date, flags)\n    if (Array.isArray(result)) {\n      date = result[0];\n      Object.assign(flags, result[1]);\n      // Result is date\n    } else {\n      date = result;\n    }\n  }\n\n  return constructFrom(referenceDate, date);\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default parse;\n", "import { millisecondsInHour, millisecondsInMinute } from \"./constants.mjs\";\n\n/**\n * The {@link parseISO} function options.\n */\n\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n * @param options - An object with options\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * const result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * const result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\nexport function parseISO(argument, options) {\n  const additionalDigits = options?.additionalDigits ?? 2;\n  const dateStrings = splitDateString(argument);\n\n  let date;\n  if (dateStrings.date) {\n    const parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (!date || isNaN(date.getTime())) {\n    return new Date(NaN);\n  }\n\n  const timestamp = date.getTime();\n  let time = 0;\n  let offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n    if (isNaN(time)) {\n      return new Date(NaN);\n    }\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    const dirtyDate = new Date(timestamp + time);\n    // JS parsed string assuming it's in UTC timezone\n    // but we need it to be parsed in our timezone\n    // so we use utc values to build date in our timezone.\n    // Year values from 0 to 99 map to the years 1900 to 1999\n    // so set year explicitly with setFullYear.\n    const result = new Date(0);\n    result.setFullYear(\n      dirtyDate.getUTCFullYear(),\n      dirtyDate.getUTCMonth(),\n      dirtyDate.getUTCDate(),\n    );\n    result.setHours(\n      dirtyDate.getUTCHours(),\n      dirtyDate.getUTCMinutes(),\n      dirtyDate.getUTCSeconds(),\n      dirtyDate.getUTCMilliseconds(),\n    );\n    return result;\n  }\n\n  return new Date(timestamp + time + offset);\n}\n\nconst patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/,\n};\n\nconst dateRegex =\n  /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nconst timeRegex =\n  /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nconst timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n\nfunction splitDateString(dateString) {\n  const dateStrings = {};\n  const array = dateString.split(patterns.dateTimeDelimiter);\n  let timeString;\n\n  // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n  if (array.length > 2) {\n    return dateStrings;\n  }\n\n  if (/:/.test(array[0])) {\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(\n        dateStrings.date.length,\n        dateString.length,\n      );\n    }\n  }\n\n  if (timeString) {\n    const token = patterns.timezone.exec(timeString);\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], \"\");\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  const regex = new RegExp(\n    \"^(?:(\\\\d{4}|[+-]\\\\d{\" +\n      (4 + additionalDigits) +\n      \"})|(\\\\d{2}|[+-]\\\\d{\" +\n      (2 + additionalDigits) +\n      \"})$)\",\n  );\n\n  const captures = dateString.match(regex);\n  // Invalid ISO-formatted year\n  if (!captures) return { year: NaN, restDateString: \"\" };\n\n  const year = captures[1] ? parseInt(captures[1]) : null;\n  const century = captures[2] ? parseInt(captures[2]) : null;\n\n  // either year or century is null, not both\n  return {\n    year: century === null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length),\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return new Date(NaN);\n\n  const captures = dateString.match(dateRegex);\n  // Invalid ISO-formatted string\n  if (!captures) return new Date(NaN);\n\n  const isWeekDate = !!captures[4];\n  const dayOfYear = parseDateUnit(captures[1]);\n  const month = parseDateUnit(captures[2]) - 1;\n  const day = parseDateUnit(captures[3]);\n  const week = parseDateUnit(captures[4]);\n  const dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    const date = new Date(0);\n    if (\n      !validateDate(year, month, day) ||\n      !validateDayOfYearDate(year, dayOfYear)\n    ) {\n      return new Date(NaN);\n    }\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  const captures = timeString.match(timeRegex);\n  if (!captures) return NaN; // Invalid ISO-formatted time\n\n  const hours = parseTimeUnit(captures[1]);\n  const minutes = parseTimeUnit(captures[2]);\n  const seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return (\n    hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * 1000\n  );\n}\n\nfunction parseTimeUnit(value) {\n  return (value && parseFloat(value.replace(\",\", \".\"))) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === \"Z\") return 0;\n\n  const captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n\n  const sign = captures[1] === \"+\" ? -1 : 1;\n  const hours = parseInt(captures[2]);\n  const minutes = (captures[3] && parseInt(captures[3])) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * millisecondsInHour + minutes * millisecondsInMinute);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  const date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  const fourthOfJanuaryDay = date.getUTCDay() || 7;\n  const diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}\n\n// Validation functions\n\n// February is null to handle the leap year (using ||)\nconst daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\n\nfunction validateDate(year, month, date) {\n  return (\n    month >= 0 &&\n    month <= 11 &&\n    date >= 1 &&\n    date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28))\n  );\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return (\n    seconds >= 0 &&\n    seconds < 60 &&\n    minutes >= 0 &&\n    minutes < 60 &&\n    hours >= 0 &&\n    hours < 25\n  );\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}\n\n// Fallback for modularized imports:\nexport default parseISO;\n", "import {\n  createRenderEffect,\n  createSignal,\n  onCleanup,\n  createMemo,\n  untrack,\n} from \"solid-js\";\nimport {\n  parseISO,\n  parse,\n  isSameDay,\n  intlFormatDistance,\n  intlFormat,\n  differenceInSeconds,\n  differenceInMilliseconds,\n} from \"date-fns\";\n\nexport enum DateRefreshPercision {\n  seconds = 0,\n  minutes = 1,\n  hours,\n  days,\n}\n\nexport function useCurrentDate(\n  percision:\n    | (() => DateRefreshPercision)\n    | DateRefreshPercision = DateRefreshPercision.minutes\n) {\n  const [current, setCurrent] = createSignal(new Date());\n\n  const updateInterval = () => {\n    switch (typeof percision === \"function\" ? percision() : percision) {\n      case DateRefreshPercision.seconds:\n        return 1000;\n      case DateRefreshPercision.minutes:\n        return 15 * 1000;\n      case DateRefreshPercision.hours:\n        return 60 * 1000;\n      case DateRefreshPercision.days:\n        return 60 * 60 * 1000;\n    }\n  };\n\n  let id: undefined | number;\n\n  const update = () => setCurrent(new Date());\n\n  createRenderEffect(() => {\n    if (typeof id !== \"undefined\") {\n      window.clearInterval(id);\n      id = undefined;\n    }\n\n    const interval = updateInterval();\n\n    const now = new Date();\n    if (differenceInMilliseconds(now, untrack(current)) <= interval) {\n      update();\n    }\n\n    id = window.setInterval(update, interval);\n  });\n\n  onCleanup(() => {\n    if (typeof id !== \"undefined\") {\n      window.clearInterval(id);\n      id = undefined;\n    }\n  });\n\n  return current;\n}\n\n/** Translate the elements with time to human-readable form.\n *\n * @param elements\n */\nexport function renderLocalTimeOn(elements: Iterable<Element>) {\n  const [allPercisionRequired, setAllPercisionRequired] = createSignal<\n    DateRefreshPercision[]\n  >([], { equals: false });\n  const percision = createMemo(() => {\n    const arr = allPercisionRequired();\n    if (arr.length < 1) {\n      return DateRefreshPercision.hours;\n    }\n\n    return arr.reduce((p, c) => (p < c ? p : c));\n  });\n  const date = useCurrentDate(percision);\n  const starts = new Date();\n\n  let idx = 0;\n  for (const e of elements) {\n    if (!(e instanceof HTMLElement)) {\n      console.warn(e, \"is not a html element can be rendered local time\");\n      continue;\n    }\n\n    const timeFormat = e.dataset.timeFormat ?? \"iso\";\n    if (timeFormat === \"local\") {\n      continue;\n    }\n\n    const i = idx++;\n    const content = e.hasAttribute('datetime') ? e.getAttribute('datetime') : e.textContent\n    const rawDate =\n      timeFormat === \"iso\"\n        ? parseISO(content)\n        : parse(content, timeFormat, starts);\n    e.dataset.raw = rawDate.toISOString();\n    e.dataset.timeFormat = \"local\";\n\n    const percisionOfRawDate = createMemo(() => {\n      const seconds = differenceInSeconds(date(), rawDate);\n      if (seconds < 60) {\n        return DateRefreshPercision.seconds;\n      } else if (seconds < 60 * 60) {\n        return DateRefreshPercision.minutes;\n      } else if (seconds < 60 * 60 * 24) {\n        return DateRefreshPercision.hours;\n      }\n      return DateRefreshPercision.days;\n    });\n\n    const fmtString = createMemo(() => {\n      if (isSameDay(rawDate, date())) {\n        return intlFormatDistance(rawDate, date());\n      }\n      return intlFormat(rawDate);\n    });\n\n    createRenderEffect(() => {\n      if (!e.hasAttribute('datetime')) {\n        e.setAttribute('datetime', rawDate.toISOString())\n      }\n    })\n\n    createRenderEffect(() => {\n      e.textContent = fmtString();\n    });\n\n    createRenderEffect(() => {\n      const p = percisionOfRawDate();\n      setAllPercisionRequired((x) => {\n        x[i] = p;\n        return x;\n      });\n    });\n  }\n}\n", "import { createRenderEffect } from \"solid-js\";\n\n\nexport function wrapElementsInClass(elements: Iterable<Element>, classes: string[]) {\n  for (const e of elements) {\n    createRenderEffect(() => {\n      const wrapper = document.createElement(\"div\");\n      wrapper.dataset.buckBaked = \"false\"\n      wrapper.classList.add(...classes);\n      e.replaceWith(wrapper);\n      wrapper.appendChild(e);\n    });\n  }\n}\n", "import { createRenderEffect, onCleanup } from \"solid-js\";\n\nfunction findCorrespondingTableHeadOfCell(target: HTMLTableCellElement): HTMLTableCellElement | null {\n  const parentElement = target.parentElement as HTMLTableRowElement;\n  const collection = parentElement.cells;\n  for (let i = 0; i < collection.length; i++) {\n    if (collection.item(i) === target) {\n      const tbody = parentElement.parentElement\n      const table = tbody.parentElement\n      const allHeads =\n        table.querySelectorAll(\n          \"thead > tr > th\"\n        );\n      return allHeads.item(i) as HTMLTableCellElement;\n    }\n  }\n  return null;\n}\n\nconst TABLE_COLUMN_HOVER_CLASSNAME = \"table-column-hover\";\n\nexport function renderAdvancedTablesOn(elements: Iterable<Element>) {\n  for (const e of elements) {\n    if (!(e instanceof HTMLTableElement)) {\n      console.warn(e, \"is unable to be rendered as advanced table\");\n      continue;\n    }\n\n    const onMouseEnter = (ev: MouseEvent) => {\n      const head = findCorrespondingTableHeadOfCell(\n        ev.target as HTMLTableCellElement\n      );\n      if (!head.classList.contains(TABLE_COLUMN_HOVER_CLASSNAME)) {\n        head.classList.add(TABLE_COLUMN_HOVER_CLASSNAME);\n      }\n    };\n\n    const onMouseLeave = (ev: MouseEvent) => {\n      const head = findCorrespondingTableHeadOfCell(\n        ev.target as HTMLTableCellElement\n      );\n      if (head.classList.contains(TABLE_COLUMN_HOVER_CLASSNAME)) {\n        head.classList.remove(TABLE_COLUMN_HOVER_CLASSNAME);\n      }\n    };\n\n    createRenderEffect(() => {\n      for (const td of e.querySelectorAll(\"td\")) {\n        td.addEventListener(\"mouseenter\", onMouseEnter);\n        td.addEventListener(\"mouseleave\", onMouseLeave);\n      }\n    });\n\n    onCleanup(() => {\n      for (const td of e.querySelectorAll(\"td\")) {\n        td.removeEventListener(\"mouseenter\", onMouseEnter);\n        td.removeEventListener(\"mouseenter\", onMouseLeave);\n      }\n    });\n  }\n}\n"],
  "mappings": "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",
  "names": ["equalFn", "a", "b", "$PROXY", "$TRACK", "$DEVCOMP", "signalOptions", "ERROR", "runEffects", "runQueue", "STALE", "PENDING", "UNOWNED", "Owner", "Transition", "Scheduler", "ExternalSourceConfig", "Listener", "Updates", "Effects", "ExecCount", "createRoot", "fn", "detachedOwner", "listener", "owner", "unowned", "current", "root", "UNOWNED", "updateFn", "untrack", "cleanNode", "runUpdates", "createSignal", "value", "options", "signalOptions", "s", "setter", "writeSignal", "readSignal", "createRenderEffect", "fn", "value", "options", "c", "createComputation", "STALE", "Scheduler", "Transition", "Updates", "updateComputation", "createMemo", "fn", "value", "options", "signalOptions", "c", "createComputation", "Scheduler", "Transition", "STALE", "Updates", "updateComputation", "readSignal", "untrack", "fn", "ExternalSourceConfig", "Listener", "listener", "onCleanup", "fn", "Owner", "startTransition", "fn", "Transition", "l", "Listener", "o", "Owner", "Scheduler", "SuspenseContext", "res", "runUpdates", "transPending", "setTransPending", "createSignal", "createContext", "defaultValue", "options", "id", "createProvider", "children", "fn", "createMemo", "memo", "resolveChildren", "c", "SuspenseContext", "readSignal", "runningTransition", "Transition", "STALE", "updateComputation", "updates", "Updates", "runUpdates", "lookUpstream", "Listener", "sSlot", "writeSignal", "node", "value", "isComp", "current", "TransitionRunning", "i", "o", "Effects", "markDownstream", "cleanNode", "time", "ExecCount", "runComputation", "Owner", "nextValue", "owner", "listener", "err", "handleError", "createComputation", "fn", "init", "pure", "state", "options", "c", "UNOWNED", "ExternalSourceConfig", "track", "trigger", "createSignal", "ordinary", "onCleanup", "triggerInTransition", "startTransition", "inTransition", "x", "runTop", "PENDING", "untrack", "ancestors", "top", "prev", "wait", "res", "completeUpdates", "Scheduler", "scheduleQueue", "runQueue", "sources", "disposed", "e", "d", "v", "len", "setTransPending", "runEffects", "queue", "item", "tasks", "lookUpstream", "node", "ignore", "runningTransition", "Transition", "i", "source", "state", "STALE", "ExecCount", "runTop", "PENDING", "markDownstream", "o", "Updates", "Effects", "cleanNode", "index", "obs", "n", "s", "reset", "top", "castError", "err", "runErrors", "fns", "owner", "f", "e", "handleError", "Owner", "ERROR", "error", "resolveChildren", "children", "results", "result", "createProvider", "id", "options", "props", "res", "createRenderEffect", "untrack", "FALLBACK", "SuspenseListContext", "createContext", "toDate", "argument", "argStr", "constructFrom", "date", "value", "addDays", "date", "amount", "_date", "toDate", "constructFrom", "maxTime", "minTime", "millisecondsInWeek", "millisecondsInDay", "millisecondsInMinute", "millisecondsInHour", "millisecondsInSecond", "secondsInHour", "secondsInMinute", "secondsInDay", "secondsInWeek", "secondsInYear", "secondsInMonth", "secondsInQuarter", "defaultOptions", "getDefaultOptions", "startOfWeek", "date", "options", "defaultOptions", "getDefaultOptions", "weekStartsOn", "_date", "toDate", "day", "diff", "startOfISOWeek", "date", "startOfWeek", "getISOWeekYear", "date", "_date", "toDate", "year", "fourthOfJanuaryOfNextYear", "constructFrom", "startOfNextYear", "startOfISOWeek", "fourthOfJanuaryOfThisYear", "startOfThisYear", "startOfDay", "date", "_date", "toDate", "getTimezoneOffsetInMilliseconds", "date", "utcDate", "differenceInCalendarDays", "dateLeft", "dateRight", "startOfDayLeft", "startOfDay", "startOfDayRight", "timestampLeft", "getTimezoneOffsetInMilliseconds", "timestampRight", "millisecondsInDay", "startOfISOWeekYear", "date", "year", "getISOWeekYear", "fourthOfJanuary", "constructFrom", "startOfISOWeek", "isSameDay", "dateLeft", "dateRight", "dateLeftStartOfDay", "startOfDay", "dateRightStartOfDay", "differenceInCalendarMonths", "dateLeft", "dateRight", "_dateLeft", "toDate", "_dateRight", "yearDiff", "monthDiff", "getQuarter", "date", "_date", "toDate", "differenceInCalendarQuarters", "dateLeft", "dateRight", "_dateLeft", "toDate", "_dateRight", "yearDiff", "quarterDiff", "getQuarter", "differenceInCalendarWeeks", "dateLeft", "dateRight", "options", "startOfWeekLeft", "startOfWeek", "startOfWeekRight", "timestampLeft", "getTimezoneOffsetInMilliseconds", "timestampRight", "millisecondsInWeek", "differenceInCalendarYears", "dateLeft", "dateRight", "_dateLeft", "toDate", "_dateRight", "differenceInMilliseconds", "dateLeft", "dateRight", "toDate", "getRoundingMethod", "method", "differenceInHours", "dateLeft", "dateRight", "options", "diff", "differenceInMilliseconds", "millisecondsInHour", "getRoundingMethod", "differenceInMinutes", "dateLeft", "dateRight", "options", "diff", "differenceInMilliseconds", "millisecondsInMinute", "getRoundingMethod", "differenceInSeconds", "dateLeft", "dateRight", "options", "diff", "differenceInMilliseconds", "getRoundingMethod", "formatDistanceLocale", "formatDistance", "token", "count", "options", "result", "tokenValue", "buildFormatLongFn", "args", "options", "width", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "buildFormatLongFn", "formatRelativeLocale", "formatRelative", "token", "_date", "_baseDate", "_options", "buildLocalizeFn", "args", "value", "options", "context", "valuesArray", "defaultWidth", "width", "index", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "dirtyNumber", "_options", "number", "rem100", "localize", "buildLocalizeFn", "quarter", "buildMatchFn", "args", "string", "options", "width", "matchPattern", "matchResult", "matchedString", "parsePatterns", "key", "findIndex", "pattern", "findKey", "value", "rest", "object", "predicate", "array", "buildMatchPatternFn", "args", "string", "options", "matchResult", "matchedString", "parseResult", "value", "rest", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "buildMatchPatternFn", "value", "buildMatchFn", "index", "enUS", "formatDistance", "formatLong", "formatRelative", "localize", "match", "getISOWeek", "date", "_date", "toDate", "diff", "startOfISOWeek", "startOfISOWeekYear", "millisecondsInWeek", "getWeekYear", "date", "options", "_date", "toDate", "year", "defaultOptions", "getDefaultOptions", "firstWeekContainsDate", "firstWeekOfNextYear", "constructFrom", "startOfNextYear", "startOfWeek", "firstWeekOfThisYear", "startOfThisYear", "startOfWeekYear", "date", "options", "defaultOptions", "getDefaultOptions", "firstWeekContainsDate", "year", "getWeekYear", "firstWeek", "constructFrom", "startOfWeek", "getWeek", "date", "options", "_date", "toDate", "diff", "startOfWeek", "startOfWeekYear", "millisecondsInWeek", "dateLongFormatter", "pattern", "formatLong", "timeLongFormatter", "dateTimeLongFormatter", "matchResult", "datePattern", "timePattern", "dateTimeFormat", "longFormatters", "dayOfYearTokenRE", "weekYearTokenRE", "throwTokens", "isProtectedDayOfYearToken", "token", "isProtectedWeekYearToken", "warnOrThrowProtectedError", "format", "input", "_message", "message", "subject", "getDefaultOptions", "getISODay", "date", "day", "toDate", "intlFormat", "date", "formatOrLocale", "localeOptions", "formatOptions", "isFormatOptions", "toDate", "opts", "intlFormatDistance", "date", "baseDate", "options", "value", "unit", "dateLeft", "toDate", "dateRight", "differenceInSeconds", "differenceInMinutes", "differenceInHours", "differenceInCalendarDays", "differenceInCalendarWeeks", "differenceInCalendarMonths", "differenceInCalendarQuarters", "differenceInCalendarYears", "diffInSeconds", "secondsInMinute", "secondsInHour", "secondsInDay", "secondsInWeek", "secondsInMonth", "secondsInQuarter", "secondsInYear", "transpose", "fromDate", "constructor", "date", "constructFrom", "TIMEZONE_UNIT_PRIORITY", "Setter", "_utcDate", "_options", "ValueSetter", "value", "validateValue", "setValue", "priority", "subPriority", "date", "options", "flags", "DateToSystemTimezoneSetter", "constructFrom", "transpose", "Parser", "dateString", "token", "match", "options", "result", "ValueSetter", "_utcDate", "_value", "_options", "EraParser", "Parser", "dateString", "token", "match", "date", "flags", "value", "numericPatterns", "timezonePatterns", "mapValue", "parseFnResult", "mapFn", "parseNumericPattern", "pattern", "dateString", "matchResult", "parseTimezonePattern", "sign", "hours", "minutes", "seconds", "millisecondsInHour", "millisecondsInMinute", "millisecondsInSecond", "parseAnyDigitsSigned", "numericPatterns", "parseNDigits", "parseNDigitsSigned", "dayPeriodEnumToHours", "dayPeriod", "normalizeTwoDigitYear", "twoDigitYear", "currentYear", "isCommonEra", "absCurrentYear", "result", "rangeEnd", "rangeEndCentury", "isPreviousCentury", "isLeapYearIndex", "year", "YearParser", "Parser", "dateString", "token", "match", "valueCallback", "year", "mapValue", "parseNDigits", "_date", "value", "date", "flags", "currentYear", "normalizedTwoDigitYear", "normalizeTwoDigitYear", "LocalWeekYearParser", "Parser", "dateString", "token", "match", "valueCallback", "year", "mapValue", "parseNDigits", "_date", "value", "date", "flags", "options", "currentYear", "getWeekYear", "normalizedTwoDigitYear", "normalizeTwoDigitYear", "startOfWeek", "ISOWeekYearParser", "Parser", "dateString", "token", "parseNDigitsSigned", "date", "_flags", "value", "firstWeekOfYear", "constructFrom", "startOfISOWeek", "ExtendedYearParser", "Parser", "dateString", "token", "parseNDigitsSigned", "date", "_flags", "value", "QuarterParser", "Parser", "dateString", "token", "match", "parseNDigits", "_date", "value", "date", "_flags", "StandAloneQuarterParser", "Parser", "dateString", "token", "match", "parseNDigits", "_date", "value", "date", "_flags", "MonthParser", "Parser", "dateString", "token", "match", "valueCallback", "value", "mapValue", "parseNumericPattern", "numericPatterns", "parseNDigits", "_date", "date", "_flags", "StandAloneMonthParser", "Parser", "dateString", "token", "match", "valueCallback", "value", "mapValue", "parseNumericPattern", "numericPatterns", "parseNDigits", "_date", "date", "_flags", "setWeek", "date", "week", "options", "_date", "toDate", "diff", "getWeek", "LocalWeekParser", "Parser", "dateString", "token", "match", "parseNumericPattern", "numericPatterns", "parseNDigits", "_date", "value", "date", "_flags", "options", "startOfWeek", "setWeek", "setISOWeek", "date", "week", "_date", "toDate", "diff", "getISOWeek", "ISOWeekParser", "Parser", "dateString", "token", "match", "parseNumericPattern", "numericPatterns", "parseNDigits", "_date", "value", "date", "_flags", "startOfISOWeek", "setISOWeek", "DAYS_IN_MONTH", "DAYS_IN_MONTH_LEAP_YEAR", "DateParser", "Parser", "dateString", "token", "match", "parseNumericPattern", "numericPatterns", "parseNDigits", "date", "value", "year", "isLeapYear", "isLeapYearIndex", "month", "_flags", "DayOfYearParser", "Parser", "dateString", "token", "match", "parseNumericPattern", "numericPatterns", "parseNDigits", "date", "value", "year", "isLeapYearIndex", "_flags", "setDay", "date", "day", "options", "defaultOptions", "getDefaultOptions", "weekStartsOn", "_date", "toDate", "currentDay", "dayIndex", "delta", "diff", "addDays", "DayParser", "Parser", "dateString", "token", "match", "_date", "value", "date", "_flags", "options", "setDay", "LocalDayParser", "Parser", "dateString", "token", "match", "options", "valueCallback", "value", "wholeWeekDays", "mapValue", "parseNDigits", "_date", "date", "_flags", "setDay", "StandAloneLocalDayParser", "Parser", "dateString", "token", "match", "options", "valueCallback", "value", "wholeWeekDays", "mapValue", "parseNDigits", "_date", "date", "_flags", "setDay", "setISODay", "date", "day", "_date", "toDate", "currentDay", "getISODay", "diff", "addDays", "ISODayParser", "Parser", "dateString", "token", "match", "valueCallback", "value", "parseNDigits", "mapValue", "_date", "date", "_flags", "setISODay", "AMPMParser", "Parser", "dateString", "token", "match", "date", "_flags", "value", "dayPeriodEnumToHours", "AMPMMidnightParser", "Parser", "dateString", "token", "match", "date", "_flags", "value", "dayPeriodEnumToHours", "DayPeriodParser", "Parser", "dateString", "token", "match", "date", "_flags", "value", "dayPeriodEnumToHours", "Hour1to12Parser", "Parser", "dateString", "token", "match", "parseNumericPattern", "numericPatterns", "parseNDigits", "_date", "value", "date", "_flags", "isPM", "Hour0to23Parser", "Parser", "dateString", "token", "match", "parseNumericPattern", "numericPatterns", "parseNDigits", "_date", "value", "date", "_flags", "Hour0To11Parser", "Parser", "dateString", "token", "match", "parseNumericPattern", "numericPatterns", "parseNDigits", "_date", "value", "date", "_flags", "Hour1To24Parser", "Parser", "dateString", "token", "match", "parseNumericPattern", "numericPatterns", "parseNDigits", "_date", "value", "date", "_flags", "hours", "MinuteParser", "Parser", "dateString", "token", "match", "parseNumericPattern", "numericPatterns", "parseNDigits", "_date", "value", "date", "_flags", "SecondParser", "Parser", "dateString", "token", "match", "parseNumericPattern", "numericPatterns", "parseNDigits", "_date", "value", "date", "_flags", "FractionOfSecondParser", "Parser", "dateString", "token", "valueCallback", "value", "mapValue", "parseNDigits", "date", "_flags", "ISOTimezoneWithZParser", "Parser", "dateString", "token", "parseTimezonePattern", "timezonePatterns", "date", "flags", "value", "constructFrom", "getTimezoneOffsetInMilliseconds", "ISOTimezoneParser", "Parser", "dateString", "token", "parseTimezonePattern", "timezonePatterns", "date", "flags", "value", "constructFrom", "getTimezoneOffsetInMilliseconds", "TimestampSecondsParser", "Parser", "dateString", "parseAnyDigitsSigned", "date", "_flags", "value", "constructFrom", "TimestampMillisecondsParser", "Parser", "dateString", "parseAnyDigitsSigned", "date", "_flags", "value", "constructFrom", "parsers", "EraParser", "YearParser", "LocalWeekYearParser", "ISOWeekYearParser", "ExtendedYearParser", "QuarterParser", "StandAloneQuarterParser", "MonthParser", "StandAloneMonthParser", "LocalWeekParser", "ISOWeekParser", "DateParser", "DayOfYearParser", "DayParser", "LocalDayParser", "StandAloneLocalDayParser", "ISODayParser", "AMPMParser", "AMPMMidnightParser", "DayPeriodParser", "Hour1to12Parser", "Hour0to23Parser", "Hour0To11Parser", "Hour1To24Parser", "MinuteParser", "SecondParser", "FractionOfSecondParser", "ISOTimezoneWithZParser", "ISOTimezoneParser", "TimestampSecondsParser", "TimestampMillisecondsParser", "formattingTokensRegExp", "longFormattingTokensRegExp", "escapedStringRegExp", "doubleQuoteRegExp", "notWhitespaceRegExp", "unescapedLatinCharacterRegExp", "parse", "dateStr", "formatStr", "referenceDate", "options", "defaultOptions", "getDefaultOptions", "locale", "enUS", "firstWeekContainsDate", "weekStartsOn", "toDate", "constructFrom", "subFnOptions", "setters", "DateToSystemTimezoneSetter", "tokens", "substring", "firstCharacter", "longFormatters", "longFormatter", "usedTokens", "token", "isProtectedWeekYearToken", "warnOrThrowProtectedError", "isProtectedDayOfYearToken", "parser", "parsers", "incompatibleTokens", "incompatibleToken", "usedToken", "parseResult", "cleanEscapedString", "uniquePrioritySetters", "setter", "a", "b", "priority", "index", "array", "setterArray", "date", "flags", "result", "input", "parseISO", "argument", "options", "additionalDigits", "dateStrings", "splitDateString", "date", "parseYearResult", "parseYear", "parseDate", "timestamp", "time", "offset", "parseTime", "parseTimezone", "dirtyDate", "result", "patterns", "dateRegex", "timeRegex", "timezoneRegex", "dateString", "array", "timeString", "token", "regex", "captures", "year", "century", "isWeekDate", "dayOfYear", "parseDateUnit", "month", "day", "week", "dayOfWeek", "validateWeekDate", "dayOfISOWeekYear", "validateDate", "validateDayOfYearDate", "value", "hours", "parseTimeUnit", "minutes", "seconds", "validateTime", "millisecondsInHour", "millisecondsInMinute", "timezoneString", "sign", "validateTimezone", "isoWeekYear", "fourthOfJanuaryDay", "diff", "daysInMonths", "isLeapYearIndex", "_year", "_hours", "useCurrentDate", "percision", "current", "setCurrent", "createSignal", "updateInterval", "id", "update", "createRenderEffect", "interval", "differenceInMilliseconds", "untrack", "onCleanup", "renderLocalTimeOn", "elements", "allPercisionRequired", "setAllPercisionRequired", "createMemo", "arr", "p", "c", "date", "starts", "idx", "e", "timeFormat", "i", "content", "rawDate", "parseISO", "parse", "percisionOfRawDate", "seconds", "differenceInSeconds", "fmtString", "isSameDay", "intlFormatDistance", "intlFormat", "x", "wrapElementsInClass", "elements", "classes", "e", "createRenderEffect", "wrapper", "findCorrespondingTableHeadOfCell", "target", "parentElement", "collection", "i", "TABLE_COLUMN_HOVER_CLASSNAME", "renderAdvancedTablesOn", "elements", "onMouseEnter", "ev", "head", "onMouseLeave", "createRenderEffect", "td", "onCleanup"]
}
